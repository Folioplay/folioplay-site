{"version":3,"sources":["../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js","../node_modules/.pnpm/is-stream@2.0.1/node_modules/is-stream/index.js","../../src/baseSolanaAdapter.ts","../node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js","../node_modules/.pnpm/base-x@4.0.0/node_modules/base-x/src/index.js","../../../src/messages.ts","../../../src/interfaces.ts","../../../src/config.ts","../../../src/loglevel.ts","../../../src/utils.ts","../../../src/baseProvider.ts","../../../src/embedUtils.ts","../../../src/PopupHandler.ts","../../../src/communicationProvider.ts","../../../src/inPageProvider.ts","../../../src/siteMetadata.ts","../../../src/embed.ts","../../src/solanaWalletAdapter.ts"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","isStream","stream","pipe","writable","_write","_writableState","readable","_read","_readableState","duplex","transform","_transform","BaseSolanaAdapter","params","clientId","provider","chainConfig","chainId","WalletLoginError","notConnectedError","chainNamespace","status","ADAPTER_STATUS","CONNECTED","request","method","accounts","existingToken","getSavedToken","name","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","slice","issuedAt","Date","toISOString","signChallenge","challenge","encodedMessage","TextEncoder","encode","message","display","signedMessage","verifySignedChallenge","bs58","sessionTime","saveToken","disconnectionError","clearToken","BaseAdapter","basex","require","ALPHABET","TypeError","BASE_MAP","Uint8Array","j","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","psz","zeroes","size","b256","carry","it3","Error","it4","vch","ArrayBuffer","isView","buffer","byteOffset","byteLength","from","pbegin","pend","b58","it1","it2","str","repeat","decode","string","disconnected","permanentlyDisconnected","unsupportedSync","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","connected","TORUS_BUILD_ENV","BUTTON_POSITION","supportedVerifierList","api","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","prodTorusUrl","localStorageKey","hostname","loglevel","getLogger","getWindowId","getTorusUrl","buildEnv","torusUrl","logLevel","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","w","h","dualScreenLeft","undefined","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","left","abs","top","BaseProvider","jsonRpcStreamName","isDuplexStream","connectionStream","messages","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","sendAsync","mux","ObjectMultiplex","pump","ignoreStream","jsonRpcConnection","createStreamMiddleware","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","data","done","createLoggerMiddleware","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Promise","resolve","reject","getRpcPromiseCallback","send","callback","streamName","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","logStreamDisconnectWarning","SafeEventEmitter","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","features","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","focus","close","redirect","locationReplaceOnRedirect","replace","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","configuration","userLanguage","navigator","language","userLanguages","split","config","getUserLanguage","embedTranslations","windowRefs","on","isConnected","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","COMMUNICATION_JRPC_METHODS","GET_PROVIDER_STATE","info","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","right","bottom","torusWidgetVisibility","buttonPosition","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","PROVIDER_JRPC_METHODS","isUnlocked","isInternal","err","result","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","querySelectorAll","find","_icon","Boolean","getSiteMetadata","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","type","storage","setItem","removeItem","code","storageAvailable","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","whiteLabel","enableLogging","network","useLocalStorage","apiKey","extraParams","setAPIKey","enableAll","setDefaultLevel","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","topupHide","isTopupHidden","torus","loginProvider","login_hint","loginParams","userInfo","privateKey","success","LOGOUT","logout","clearInit","isElement","element","Element","Document","contains","path","WALLET_INSTANCE_ID","instanceId","finalPath","searchParams","forEach","USER_INFO","userInfoResponse","TOPUP","topupResponse","response","transaction","serialize","requireAllSignatures","options","signature","serializeMessage","messageOnly","parsed","JSON","parse","publicKey","PublicKey","Buffer","addSignature","transactions","map","tx","responses","signatures","item","idx","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","BasePostMessageStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","login","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all","SolanaWalletAdapter","_this","WALLET_ADAPTERS","TORUS_SOLANA","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","solanaProvider","_","blockExplorer","displayName","rpcTarget","ticker","tickerName","blockExplorerUrl","logo","getChainConfig","torusInstance","init","TorusInjectedProvider","READY","ADAPTER_EVENTS","autoConnect","rehydrated","connect","ERRORED","WalletInitializationError","notReady","CONNECTING","adapter","torusInpageProvider","sendTransaction","signAllTransactions","signMessage","signTransaction","setupProvider","Web3AuthError","setProvider","reconnected","connectionError","cleanup","DISCONNECTED","getUserInfo"],"mappings":"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","file":"static/js/8.c56ad096.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n","import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { WalletLoginError, saveToken, verifySignedChallenge, signChallenge, getSavedToken, checkIfTokenIsExpired, ADAPTER_STATUS, clearToken, BaseAdapter } from '@web3auth/base';\nimport bs58 from 'bs58';\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar BaseSolanaAdapter = /*#__PURE__*/function (_BaseAdapter) {\n  _inherits(BaseSolanaAdapter, _BaseAdapter);\n\n  var _super = _createSuper(BaseSolanaAdapter);\n\n  function BaseSolanaAdapter() {\n    var _this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BaseSolanaAdapter);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"clientId\", void 0);\n\n    _this.clientId = params.clientId;\n    return _this;\n  }\n\n  _createClass(BaseSolanaAdapter, [{\n    key: \"authenticateUser\",\n    value: function () {\n      var _authenticateUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$chainConfig;\n\n        var _this$chainConfig2, chainNamespace, chainId, accounts, existingToken, isExpired, payload, challenge, encodedMessage, signedMessage, idToken;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!this.provider || !((_this$chainConfig = this.chainConfig) !== null && _this$chainConfig !== void 0 && _this$chainConfig.chainId))) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError();\n\n              case 2:\n                _this$chainConfig2 = this.chainConfig, chainNamespace = _this$chainConfig2.chainNamespace, chainId = _this$chainConfig2.chainId;\n\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n\n              case 5:\n                _context.next = 7;\n                return this.provider.request({\n                  method: \"getAccounts\"\n                });\n\n              case 7:\n                accounts = _context.sent;\n\n                if (!(accounts && accounts.length > 0)) {\n                  _context.next = 27;\n                  break;\n                }\n\n                existingToken = getSavedToken(accounts[0], this.name);\n\n                if (!existingToken) {\n                  _context.next = 14;\n                  break;\n                }\n\n                isExpired = checkIfTokenIsExpired(existingToken);\n\n                if (isExpired) {\n                  _context.next = 14;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  idToken: existingToken\n                });\n\n              case 14:\n                payload = {\n                  domain: window.location.origin,\n                  uri: window.location.href,\n                  address: accounts[0],\n                  chainId: parseInt(chainId, 16),\n                  version: \"1\",\n                  nonce: Math.random().toString(36).slice(2),\n                  issuedAt: new Date().toISOString()\n                };\n                _context.next = 17;\n                return signChallenge(payload, chainNamespace);\n\n              case 17:\n                challenge = _context.sent;\n                encodedMessage = new TextEncoder().encode(challenge);\n                _context.next = 21;\n                return this.provider.request({\n                  method: \"signMessage\",\n                  params: {\n                    message: encodedMessage,\n                    display: \"utf8\"\n                  }\n                });\n\n              case 21:\n                signedMessage = _context.sent;\n                _context.next = 24;\n                return verifySignedChallenge(chainNamespace, bs58.encode(signedMessage), challenge, this.name, this.sessionTime, this.clientId);\n\n              case 24:\n                idToken = _context.sent;\n                saveToken(accounts[0], this.name, idToken);\n                return _context.abrupt(\"return\", {\n                  idToken: idToken\n                });\n\n              case 27:\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function authenticateUser() {\n        return _authenticateUser.apply(this, arguments);\n      }\n\n      return authenticateUser;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n\n              case 2:\n                _context2.next = 4;\n                return this.provider.request({\n                  method: \"getAccounts\"\n                });\n\n              case 4:\n                accounts = _context2.sent;\n\n                if (accounts && accounts.length > 0) {\n                  clearToken(accounts[0], this.name);\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }]);\n\n  return BaseSolanaAdapter;\n}(BaseAdapter);\n\nexport { BaseSolanaAdapter };\n//# sourceMappingURL=baseSolanaAdapter.esm.js.map\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { PublicKey } from '@solana/web3.js';\nimport { createLoggerMiddleware, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback, BasePostMessageStream } from '@toruslabs/openlogin-jrpc';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport dequal from 'fast-deep-equal';\n\nvar version = \"0.3.2\";\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: method => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: chainId => `Torus: Connected to chain with ID \"${chainId}\".`\n  },\n  warnings: {}\n};\n\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`\n};\n\nvar log = loglevel.getLogger(\"solana-embed\");\n\n// utility functions\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Torus - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = `Torus: Lost connection to \"${remoteLabel}\".`;\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getWindowId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async buildEnv => {\n  let torusUrl;\n  let logLevel;\n  // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://solana.tor.us`;\n      logLevel = \"error\";\n      break;\n  }\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 600,\n  width: 400\n};\nfunction storageAvailable(type) {\n  let storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && (\n    // everything except Firefox\n    e.code === 22 ||\n    // Firefox\n    e.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" ||\n    // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n/**\n * popup handler utils\n */\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nclass BaseProvider extends SafeEventEmitter {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super();\n    _defineProperty(this, \"isTorus\", void 0);\n    _defineProperty(this, \"_rpcEngine\", void 0);\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n    _defineProperty(this, \"_state\", void 0);\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"Torus\"));\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n    // setup own event listeners\n    // connect to async provider\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\"));\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  send(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n}\n\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nclass PopupHandler extends SafeEventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    var _this$window;\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass TorusCommunicationProvider extends BaseProvider {\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    });\n    // private state\n    _defineProperty(this, \"embedTranslations\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"dappStorageKey\", void 0);\n    _defineProperty(this, \"windowRefs\", void 0);\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    this._state = _objectSpread$2({}, TorusCommunicationProvider._defaultState);\n    // public state\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {};\n    // setup own event listeners\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n        this._displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const {\n          windowId,\n          url\n        } = params;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentLoginProvider\n        } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n  get isLoggedIn() {\n    return this._state.isLoggedIn;\n  }\n  get isIFrameFullScreen() {\n    return this._state.isIFrameFullScreen;\n  }\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  async _initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        dappStorageKey,\n        torusAlertContainer,\n        torusIframe\n      } = params;\n      this.torusUrl = torusUrl;\n      this.dappStorageKey = dappStorageKey;\n      this.torusAlertContainer = torusAlertContainer;\n      this.torusIframe = torusIframe;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const {\n        currentLoginProvider,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      });\n      // indicate that we've connected, for EIP-1193 compliance\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  _handleWindow(windowId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const finalUrl = new URL(url || `${this.torusUrl}/redirect?windowId=${windowId}`);\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features\n    });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs[windowId] = handledWindow;\n    // We tell the iframe that the window has been successfully opened\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: {\n        windowId\n      }\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n  _displayIframe() {\n    let {\n      isFull = false,\n      rid = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const style = {};\n    // set phase\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: {\n        isIFrameFullScreen: isFull,\n        rid\n      }\n    });\n  }\n  hideTorusButton() {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n  showTorusButton() {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  _handleConnect(currentLoginProvider, isLoggedIn) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        currentLoginProvider,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  // Called if the iframe wants to close the window cause it is done processing the request\n  _handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n  async _createPopupBlockAlert(windowId, url) {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` + \"<div>\" + `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` + `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n  getLogoUrl() {\n    const logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    return logoUrl;\n  }\n}\n_defineProperty(TorusCommunicationProvider, \"_defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentLoginProvider: null,\n  isIFrameFullScreen: false,\n  hasEmittedConnection: false,\n  torusWidgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false\n});\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass TorusInPageProvider extends BaseProvider {\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    });\n    // private state\n    _defineProperty(this, \"chainId\", void 0);\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n    this._state = _objectSpread$1({}, TorusInPageProvider._defaultState);\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    // setup own event listeners\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params);\n      }\n    };\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      });\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", {\n        chainId\n      });\n      this._handleChainChanged({\n        chainId\n      });\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  _handleChainChanged() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n_defineProperty(TorusInPageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\n/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window;\n    // Use the site's favicon if it exists\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nclass Torus {\n  constructor() {\n    let {\n      modalZIndex = 99999\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"torusAlert\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"alertZIndex\", void 0);\n    _defineProperty(this, \"requestedLoginProvider\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationProvider\", void 0);\n    _defineProperty(this, \"dappStorageKey\", void 0);\n    _defineProperty(this, \"isTopupHidden\", false);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    _defineProperty(this, \"styleLink\", void 0);\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n  get isLoggedIn() {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network,\n      showTorusButton = false,\n      useLocalStorage = false,\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      apiKey = \"torus-default\",\n      extraParams = {},\n      whiteLabel\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv);\n    log.enableAll();\n    log.info(torusUrl, \"url loaded\");\n    log.info(`Solana Embed Version :${version}`);\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n    torusIframeUrl.hash = hashParams.toString();\n    // Iframe code\n    this.torusIframe = htmlToElement(`<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`);\n    this.torusAlertContainer = htmlToElement(`<div id=\"torusAlertContainer\" style=\"display:none; z-index: ${this.alertZIndex.toString()}\"></div>`);\n    this.styleLink = htmlToElement(`<link href=\"${torusUrl}/css/widget.css\" rel=\"stylesheet\" type=\"text/css\">`);\n    const handleSetup = async () => {\n      return new Promise((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata();\n            // send init params here\n            this.torusIframe.contentWindow.postMessage({\n              buttonPosition,\n              apiKey,\n              network,\n              dappMetadata,\n              extraParams,\n              whiteLabel\n            }, torusIframeUrl.origin);\n            await this._setupWeb3({\n              torusUrl\n            });\n            if (showTorusButton) this.showTorusButton();\n            if (whiteLabel !== null && whiteLabel !== void 0 && whiteLabel.topupHide) this.isTopupHidden = whiteLabel.topupHide;else this.hideTorusButton();\n            this.isInitialized = true;\n            window.torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n    await documentReady();\n    await handleSetup();\n  }\n  async login() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({\n          isFull: true\n        });\n      }\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest({\n          method: \"solana_requestAccounts\",\n          params: [this.requestedLoginProvider, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n  async loginWithPrivateKey(loginParams) {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    const {\n      success\n    } = await this.communicationProvider.request({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo\n      }\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n    this.requestedLoginProvider = null;\n  }\n  async cleanUp() {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n  hideTorusButton() {\n    this.communicationProvider.hideTorusButton();\n  }\n  showTorusButton() {\n    this.communicationProvider.showTorusButton();\n  }\n  async setProvider(params) {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: _objectSpread({}, params)\n    });\n  }\n  async showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const instanceId = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: []\n    });\n    const finalPath = path ? `/${path}` : \"\";\n    const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n    // Using URL constructor to prevent js injection and allow parameter validation.!\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach(x => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    // No need to track this window state. Hence, no _handleWindow call.\n    const walletWindow = new PopupHandler({\n      url: finalUrl,\n      features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW)\n    });\n    walletWindow.open();\n  }\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n  async initiateTopup(provider, params) {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: {\n        provider,\n        params,\n        windowId\n      }\n    });\n    return topupResponse;\n  }\n  // Solana specific API\n  async getAccounts() {\n    const response = await this.provider.request({\n      method: \"getAccounts\",\n      params: []\n    });\n    return response;\n  }\n  async sendTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    return response;\n  }\n  // support sendOptions\n  async signAndSendTransaction(transaction, options) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\"),\n        options\n      }\n    });\n    return {\n      signature: response\n    };\n  }\n  async signTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"sign_transaction\",\n      params: {\n        message: transaction.serializeMessage().toString(\"hex\"),\n        messageOnly: true\n      }\n    });\n    // reconstruct signature pair\n    const parsed = JSON.parse(response);\n    const signature = {\n      publicKey: new PublicKey(parsed.publicKey),\n      signature: Buffer.from(parsed.signature, \"hex\")\n    };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n  async signAllTransactions(transactions) {\n    const encodedMessage = transactions.map(tx => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: {\n        message: encodedMessage,\n        messageOnly: true\n      }\n    });\n    // reconstruct signature pairs\n    const signatures = responses.map(item => {\n      const parsed = JSON.parse(item);\n      return {\n        publicKey: new PublicKey(parsed.publicKey),\n        signature: Buffer.from(parsed.signature, \"hex\")\n      };\n    });\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data\n      }\n    });\n    return response;\n  }\n  async getGaslessPublicKey() {\n    const response = await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: []\n    });\n    return response;\n  }\n  // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n  handleDappStorageKey(useLocalStorage) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = `torus-app-${getWindowId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n  async _setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow\n    });\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow\n    });\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload, cb);\n    };\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW) // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        _payload.params.windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload, cb);\n    };\n    // detect solana_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({\n            loginProvider: params[0]\n          });\n          self.login({\n            loginProvider: params[0]\n          })\n          // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res))\n          // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n    // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    await Promise.all([inPageProvider._initializeState(), communicationProvider._initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      dappStorageKey: this.dappStorageKey,\n      torusAlertContainer: this.torusAlertContainer,\n      torusIframe: this.torusIframe\n    }))]);\n    log.debug(\"Torus - injected provider\");\n  }\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInPageProvider, Torus as default };\n//# sourceMappingURL=solanaEmbed.esm.js.map\n",null,null,null,null,null,null,null,null,null,null,null,"import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _get from '@babel/runtime/helpers/get';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport Torus from '@toruslabs/solana-embed';\nimport { WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, log, ADAPTER_EVENTS, getChainConfig, WalletLoginError, Web3AuthError, WalletInitializationError } from '@web3auth/base';\nimport { BaseSolanaAdapter } from '@web3auth/base-solana-adapter';\nimport { TorusInjectedProvider } from '@web3auth/solana-provider';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SolanaWalletAdapter = /*#__PURE__*/function (_BaseSolanaAdapter) {\n  _inherits(SolanaWalletAdapter, _BaseSolanaAdapter);\n\n  var _super = _createSuper(SolanaWalletAdapter);\n\n  function SolanaWalletAdapter(params) {\n    var _this;\n\n    _classCallCheck(this, SolanaWalletAdapter);\n\n    _this = _super.call(this, params);\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", WALLET_ADAPTERS.TORUS_SOLANA);\n\n    _defineProperty(_assertThisInitialized(_this), \"adapterNamespace\", ADAPTER_NAMESPACES.SOLANA);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentChainNamespace\", CHAIN_NAMESPACES.SOLANA);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(_assertThisInitialized(_this), \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(_assertThisInitialized(_this), \"torusInstance\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"torusWalletOptions\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"initParams\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"loginSettings\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"solanaProvider\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"rehydrated\", false);\n\n    _this.torusWalletOptions = params.adapterSettings || {};\n    _this.initParams = params.initParams || {};\n    _this.loginSettings = params.loginSettings || {};\n    _this.chainConfig = params.chainConfig || null;\n    _this.sessionTime = params.sessionTime || 86400;\n    return _this;\n  }\n\n  _createClass(SolanaWalletAdapter, [{\n    key: \"provider\",\n    get: function get() {\n      if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n        var _this$solanaProvider;\n\n        return ((_this$solanaProvider = this.solanaProvider) === null || _this$solanaProvider === void 0 ? void 0 : _this$solanaProvider.provider) || null;\n      }\n\n      return null;\n    },\n    set: function set(_) {\n      throw new Error(\"Not implemented\");\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        var network, _this$chainConfig, blockExplorer, displayName, ticker, tickerName, rpcTarget, chainId, _this$chainConfig2, _chainId, _blockExplorer, _displayName, _rpcTarget, _ticker, _tickerName;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _get(_getPrototypeOf(SolanaWalletAdapter.prototype), \"checkInitializationRequirements\", this).call(this); // set chainConfig for mainnet by default if not set\n\n\n                if (!this.chainConfig) {\n                  this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n                  _this$chainConfig = this.chainConfig, blockExplorer = _this$chainConfig.blockExplorer, displayName = _this$chainConfig.displayName, ticker = _this$chainConfig.ticker, tickerName = _this$chainConfig.tickerName, rpcTarget = _this$chainConfig.rpcTarget, chainId = _this$chainConfig.chainId;\n                  network = {\n                    chainId: chainId,\n                    rpcTarget: rpcTarget,\n                    blockExplorerUrl: blockExplorer,\n                    displayName: displayName,\n                    ticker: ticker,\n                    tickerName: tickerName,\n                    logo: \"\"\n                  };\n                } else {\n                  _this$chainConfig2 = this.chainConfig, _chainId = _this$chainConfig2.chainId, _blockExplorer = _this$chainConfig2.blockExplorer, _displayName = _this$chainConfig2.displayName, _rpcTarget = _this$chainConfig2.rpcTarget, _ticker = _this$chainConfig2.ticker, _tickerName = _this$chainConfig2.tickerName;\n                  network = {\n                    chainId: _chainId,\n                    rpcTarget: _rpcTarget,\n                    blockExplorerUrl: _blockExplorer,\n                    displayName: _displayName,\n                    tickerName: _tickerName,\n                    ticker: _ticker,\n                    logo: \"\"\n                  };\n                }\n\n                this.torusInstance = new Torus(this.torusWalletOptions);\n                log.debug(\"initializing torus solana adapter init\");\n                _context.next = 6;\n                return this.torusInstance.init(_objectSpread(_objectSpread({\n                  showTorusButton: false\n                }, this.initParams), {}, {\n                  network: network\n                }));\n\n              case 6:\n                this.solanaProvider = new TorusInjectedProvider({\n                  config: {\n                    chainConfig: this.chainConfig\n                  }\n                });\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n                _context.prev = 9;\n                log.debug(\"initializing torus solana adapter\");\n\n                if (!options.autoConnect) {\n                  _context.next = 15;\n                  break;\n                }\n\n                this.rehydrated = true;\n                _context.next = 15;\n                return this.connect();\n\n              case 15:\n                _context.next = 21;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](9);\n                log.error(\"Failed to connect with cached torus solana provider\", _context.t0);\n                this.emit(ADAPTER_EVENTS.ERRORED, _context.t0);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 17]]);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var torusInpageProvider, _this$chainConfig3, chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName, network;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _get(_getPrototypeOf(SolanaWalletAdapter.prototype), \"checkConnectionRequirements\", this).call(this);\n\n                if (this.torusInstance) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 3:\n                if (this.solanaProvider) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 5:\n                this.status = ADAPTER_STATUS.CONNECTING;\n                this.emit(ADAPTER_EVENTS.CONNECTING, {\n                  adapter: WALLET_ADAPTERS.TORUS_SOLANA\n                });\n                _context2.prev = 7;\n                _context2.next = 10;\n                return this.torusInstance.login(this.loginSettings);\n\n              case 10:\n                _context2.prev = 10;\n                torusInpageProvider = this.torusInstance.provider;\n                torusInpageProvider.sendTransaction = this.torusInstance.sendTransaction.bind(this.torusInstance);\n                torusInpageProvider.signAllTransactions = this.torusInstance.signAllTransactions.bind(this.torusInstance);\n                torusInpageProvider.signMessage = this.torusInstance.signMessage.bind(this.torusInstance);\n                torusInpageProvider.signTransaction = this.torusInstance.signTransaction.bind(this.torusInstance);\n                _context2.next = 18;\n                return this.solanaProvider.setupProvider(torusInpageProvider);\n\n              case 18:\n                _context2.next = 30;\n                break;\n\n              case 20:\n                _context2.prev = 20;\n                _context2.t0 = _context2[\"catch\"](10);\n\n                if (!(_context2.t0 instanceof Web3AuthError && _context2.t0.code === 5010)) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                _this$chainConfig3 = this.chainConfig, chainId = _this$chainConfig3.chainId, blockExplorer = _this$chainConfig3.blockExplorer, displayName = _this$chainConfig3.displayName, rpcTarget = _this$chainConfig3.rpcTarget, ticker = _this$chainConfig3.ticker, tickerName = _this$chainConfig3.tickerName;\n                network = {\n                  chainId: chainId,\n                  rpcTarget: rpcTarget,\n                  blockExplorerUrl: blockExplorer,\n                  displayName: displayName,\n                  tickerName: tickerName,\n                  ticker: ticker,\n                  logo: \"\"\n                };\n                _context2.next = 27;\n                return this.torusInstance.setProvider(network);\n\n              case 27:\n                _context2.next = 30;\n                break;\n\n              case 29:\n                throw _context2.t0;\n\n              case 30:\n                this.status = ADAPTER_STATUS.CONNECTED;\n                this.torusInstance.showTorusButton();\n                this.emit(ADAPTER_STATUS.CONNECTED, {\n                  adapter: WALLET_ADAPTERS.TORUS_SOLANA,\n                  reconnected: this.rehydrated\n                });\n                return _context2.abrupt(\"return\", this.provider);\n\n              case 36:\n                _context2.prev = 36;\n                _context2.t1 = _context2[\"catch\"](7);\n                // ready again to be connected\n                this.status = ADAPTER_STATUS.READY;\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.ERRORED, _context2.t1);\n                throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n\n              case 42:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[7, 36], [10, 20]]);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var options,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {\n                  cleanup: false\n                };\n\n                if (this.torusInstance) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 3:\n                _context3.next = 5;\n                return _get(_getPrototypeOf(SolanaWalletAdapter.prototype), \"disconnect\", this).call(this);\n\n              case 5:\n                _context3.next = 7;\n                return this.torusInstance.logout();\n\n              case 7:\n                if (options.cleanup) {\n                  // ready to connect again\n                  this.status = ADAPTER_STATUS.NOT_READY;\n                  this.torusInstance = null;\n                  this.solanaProvider = null;\n                } else {\n                  // ready to connect again\n                  this.status = ADAPTER_STATUS.READY;\n                }\n\n                this.emit(ADAPTER_EVENTS.DISCONNECTED);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var userInfo;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 2:\n                if (this.torusInstance) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 4:\n                _context4.next = 6;\n                return this.torusInstance.getUserInfo();\n\n              case 6:\n                userInfo = _context4.sent;\n                return _context4.abrupt(\"return\", userInfo);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }()\n  }, {\n    key: \"setAdapterSettings\",\n    value: function setAdapterSettings(options) {\n      if (this.status === ADAPTER_STATUS.READY) return;\n\n      if (options !== null && options !== void 0 && options.sessionTime) {\n        this.sessionTime = options.sessionTime;\n      }\n\n      if (options !== null && options !== void 0 && options.clientId) {\n        this.clientId = options.clientId;\n      }\n    }\n  }]);\n\n  return SolanaWalletAdapter;\n}(BaseSolanaAdapter);\n\nexport { SolanaWalletAdapter };\n//# sourceMappingURL=torusSolanaAdapter.esm.js.map\n"],"sourceRoot":""}