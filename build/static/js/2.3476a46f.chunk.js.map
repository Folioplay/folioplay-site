{"version":3,"sources":["../node_modules/@noble/hashes/utils.js","../node_modules/@noble/hashes/_assert.js","../node_modules/bs58/index.js","../../src/rpc/JrpcClient.ts","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/base/baseInjectedProvider.ts","../../src/providers/injectedProviders/base/providerHandlers.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../../src/providers/injectedProviders/slope/providerHandlers.ts","../../src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../../src/providers/injectedProviders/solflare/providerHandlers.ts","../../src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../../src/providers/injectedProviders/sollet/providerHandlers.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","../../src/classes.ts","../../src/error-constants.ts","../node_modules/@noble/hashes/_sha2.js","../node_modules/@noble/hashes/_u64.js","../../src/Layout.ts","../../src/utils.ts","../node_modules/@noble/ed25519/lib/esm/index.js","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../../src/structs/coercions.ts","../node_modules/@noble/secp256k1/lib/esm/index.js","../../src/utils/ed25519.ts","../../src/utils/to-buffer.ts","../../src/utils/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction/constants.ts","../../src/transaction/expiry-custom-errors.ts","../../src/message/account-keys.ts","../../src/layout.ts","../../src/utils/shortvec-encoding.ts","../../src/utils/assert.ts","../../src/transaction/legacy.ts","../../src/message/compiled-keys.ts","../../src/message/legacy.ts","../../src/message/v0.ts","../../src/sysvar.ts","../../src/utils/send-and-confirm-transaction.ts","../../src/utils/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/utils/bigint.ts","../../src/nonce-account.ts","../../src/programs/system.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/programs/address-lookup-table/state.ts","../../src/account-data.ts","../../src/utils/makeWebsocketUrl.ts","../../src/connection.ts","../../src/keypair.ts","../../src/programs/address-lookup-table/index.ts","../../src/programs/compute-budget.ts","../../src/programs/ed25519.ts","../../src/utils/secp256k1.ts","../../src/programs/secp256k1.ts","../../src/programs/stake.ts","../../src/programs/vote.ts","../../src/validator-info.ts","../../src/vote-account.ts","../node_modules/@noble/hashes/sha512.js","../node_modules/@noble/hashes/cryptoBrowser.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/base-x/src/index.js","../node_modules/@noble/hashes/sha256.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/@noble/hashes/sha3.js","../node_modules/@noble/hashes/hmac.js","../../src/index.ts"],"names":["Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","require","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","arrays","every","a","reduce","result","pad","set","this","_cloneInto","defaults","opts","undefined","obj","prototype","call","constructor","assign","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","hashCons","msg","bytesLength","crypto","web","getRandomValues","node","number","n","isSafeInteger","bool","b","bytes","lengths","includes","hash","exists","instance","checkFinished","destroyed","finished","output","out","min","assert","default","basex","module","createChainIdMiddleware","chainId","req","res","next","end","method","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","_ref","getAccounts","createAsyncMiddleware","request","response","_context","accounts","_ref3","requestAccounts","_context2","targetMethod","handler","_context3","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","createRequestAccountsMiddleware","createGetAccountsMiddleware","createGenericJRPCMiddleware","BaseInjectedProvider","_inherits","config","state","_classCallCheck","_super","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","_createClass","key","_","Promise","resolve","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","push","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","publicKey","bs58","_getAccounts","_getPrivateKey","ethErrors","rpc","methodNotSupported","_getSecretKey","_context5","params","transaction","_context6","display","sigData","signature","_req$params","_req$params2","_context7","invalidParams","_context8","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","connect","_yield$injectedProvid","_yield$injectedProvid2","txMessage","invalidRequest","serializeMessage","_yield$injectedProvid3","PublicKey","decode","addSignature","custom","code","_yield$injectedProvid4","conn","Connection","sendRawTransaction","serialize","allTxns","unsignedTx","_yield$injectedProvid5","signatures","getSlopeHandlers","bind","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","sign","getSolletHandlers","getTorusHandlers","_req$params3","sendTransaction","_req$params4","_req$params5","transactions","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","rpcConnectionError","emit","_context4","on","_this","configure","_objectSpread","setupProvider","_getProviderHandlers","privKey","keyPairGenerator","Keypair","fromSecretKey","Buffer","_context9","keyPair","toBase58","secretKey","partialSign","signedMsg","nacl","detached","_providerEngineProxy","sig","txns","_req$params6","_iterator","tx","SolanaPrivateKeyProvider","_enable","privateKey","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","name","displayName","blockExplorer","switchSolanaChain","switchChain","_ref6","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","_this2","updateAccount","_ref7","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","_yield$this$provider$","signedTransaction","signedTransactions","args","EthereumRpcError","isInteger","serialized","stack","fast_safe_stringify_1","stringifyReplacer","EthereumProviderError","isValidEthProviderCode","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","limitExceeded","parse","methodNotFound","internal","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","standard","SHA2","_assert_js_1","utils_js_1","padOffset","pos","view","len","take","subarray","process","dataView","roundClean","fill","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","get","forEach","digestInto","destroy","to","add","toBig","split","fromBig","U32_MASK64","le","lst","Ah","Al","Bh","Bl","u64","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","checkUint8Array","uint8ArrayToBuffer","buffer_1","Layout","span","property","offset","RangeError","rv","values","nameWithProperty","lo","Class","layout","hasOwnProperty","layout_","boundConstructor_","makeDestinationObject","writable","ExternalLayout","GreedyCount","elementSpan","rem","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","elo","Structure","fields","decodePrefixes","isArray","acc","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","srcBuffer","write","CString","String","srcb","copy","UTF8","maxSpan","Constant","FALLBACK_ERROR_CODE","error_constants_1","FALLBACK_MESSAGE","FALLBACK_ERROR","getMessageFromCode","fallbackMessage","codeString","hasKey","isJsonRpcServerError","isValidCode","assignOriginalError","error","fallbackError","shouldIncludeStack","classes_1","_error","originalError","_a","_b","_0n","_1n","_2n","CU_O","CURVE","freeze","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","x","y","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","p","base","window","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","abs","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","num","reduceRight","invertBatch","map","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","c","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","getExtendedPublicKey","point","Signature","assertValidity","fromHex","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","q","m","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","max","adjustBytes25519","checkPrivateKey","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","sha512","getExtendedPublicKeySync","prepareVerification","SB","pub","finishVerification","k","kA","sync","getPublicKey","R","verify","_setWindowSize","nodeCrypto","self","TORSION_SUBGROUP","hashToPrivateScalar","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","configurable","val","toFailures","run","StructError","failure","failures","rest","path","join","isObject","print","JSON","stringify","shiftIterator","input","done","toFailure","context","struct","branch","type","refinement","Symbol","iterator","options","coerce","ctx","coercer","schema","valid","validator","entries","Map","Set","refiner","Struct","props","is","validate","tuples","tuple","define","Element","boolean","literal","constant","description","never","nullable","optional","record","Key","Value","string","Elements","Never","keys","Structs","unknown","condition","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","counter","hmacSha256","seed","hmac","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","sha256","messages","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","charCodeAt","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","isOnCurve","toBuffer","isBuffer","properties","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","_bn","isPublicKeyData","decoded","BN","eq","toJSON","toArrayLike","zeroPad","alloc","fromPublicKey","programId","concat","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","item","field","decodeLength","size","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","accountKeys","recentBlockhash","indexToProgramIds","account","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","signData","compile","payerKey","byteArray","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","pair","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","_addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","confirmTransaction","status","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","isArrayProp","propVal","toStr","isFinite","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","source","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetParsedBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","endpoint","wsEndpoint","httpHeaders","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","callback","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","strategy","rawSignature","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","timeoutId","TIMED_OUT","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","race","outcome","clearTimeout","removeSignatureListener","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","extra","block","endSlot","transactionDetails","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","getNonceAndContext","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","close","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","keccak_256","recoveryId","Secp256k1Program","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","sha384","sha512_256","SHA512","_sha2_js_1","_u64_js_1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","move","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","__createBinding","enumerable","__setModuleDefault","__decorate","decorators","target","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","buf","maybeResize","writeUInt8","writeUInt16LE","writeBuffer","writeU32","fn","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","apply","readUInt8","readUInt16LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","input_stream","code_points","cp","fromCharCode","codePointsToString","opt_string","stringToCodePoints","reversed","toBigIntBE","toBufferBE","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","socket","WebSocket","onopen","onmessage","event","onerror","onclose","reason","optionsOrCallback","send","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","webSocketFactory","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","promise","_login","mark","_callee","resp","wrap","sent","abrupt","stop","_listMethods","_callee2","_this3","_subscribe","_callee3","_x2","_unsubscribe","_callee4","_x3","_this4","listeners","_ref2","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","shake256","shake128","keccak_512","keccak_384","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","suffix","enableXOF","posOut","state32","keccak","finish","bufferOut","writeInto","xofInto","gen","genShake","dkLen","HMAC","_key","iHash","oHash","getPrototypeOf","utils_1","errors_1","getEthJsonRpcError","parseOpts","getEthProviderError","server"],"mappings":"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","file":"static/js/2.3476a46f.chunk.js","sourcesContent":["\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n",null,"import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using acounter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetParsedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    return res.result;\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"],"sourceRoot":""}