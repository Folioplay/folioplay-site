{"version":3,"sources":["../../src/abstract/utils.ts","../../src/abstract/modular.ts","../node_modules/bs58/index.js","../../src/rpc/JrpcClient.ts","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/base/baseInjectedProvider.ts","../../src/providers/injectedProviders/base/providerHandlers.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../../src/providers/injectedProviders/slope/providerHandlers.ts","../../src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../../src/providers/injectedProviders/solflare/providerHandlers.ts","../../src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../../src/providers/injectedProviders/sollet/providerHandlers.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","_u64.ts","../../src/abstract/curve.ts","../../src/abstract/hash-to-curve.ts","../../src/Layout.ts","../../src/abstract/weierstrass.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../src/utils.ts","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../../src/structs/coercions.ts","../../src/utils/ed25519.ts","../../src/utils/to-buffer.ts","../../src/utils/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/account.ts","../../src/transaction/constants.ts","../../src/transaction/expiry-custom-errors.ts","../../src/message/account-keys.ts","../../src/layout.ts","../../src/utils/shortvec-encoding.ts","../../src/utils/assert.ts","../../src/transaction/legacy.ts","../../src/message/compiled-keys.ts","../../src/message/legacy.ts","../../src/message/v0.ts","../../src/sysvar.ts","../../src/utils/send-and-confirm-transaction.ts","../../src/utils/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/utils/bigint.ts","../../src/nonce-account.ts","../../src/programs/system.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/rpc-websocket.ts","../../src/programs/address-lookup-table/state.ts","../../src/account-data.ts","../../src/utils/makeWebsocketUrl.ts","../../src/connection.ts","../../src/keypair.ts","../../src/programs/address-lookup-table/index.ts","../../src/programs/compute-budget.ts","../../src/programs/ed25519.ts","../../src/utils/secp256k1.ts","../../src/programs/secp256k1.ts","../../src/programs/stake.ts","../../src/programs/vote.ts","../../src/validator-info.ts","../../src/vote-account.ts","ed25519.ts","sha512.ts","../../src/abstract/edwards.ts","../../src/abstract/montgomery.ts","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/base-x/src/index.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","sha3.ts","secp256k1.ts","_shortw_utils.ts","hmac.ts"],"names":["exports","hexToNumber","n","len","val","power","Fp","basex","require","module","createChainIdMiddleware","chainId","req","res","next","end","method","result","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getAccounts","createAsyncMiddleware","request","response","Error","accounts","undefined","requestAccounts","targetMethod","handler","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","createRequestAccountsMiddleware","createGetAccountsMiddleware","createGenericJRPCMiddleware","BaseInjectedProvider","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","_","Promise","resolve","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","push","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","update","BaseProvider","getBaseProviderHandlers","publicKey","bs58","encode","toBytes","ethErrors","rpc","methodNotSupported","params","message","transaction","display","sigData","signature","length","invalidParams","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","connect","data","txMessage","invalidRequest","serializeMessage","PublicKey","decode","addSignature","custom","code","conn","Connection","sendRawTransaction","serialize","allTxns","unsignedTx","i","msg","signatures","getSlopeHandlers","bind","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","sign","getSolletHandlers","getTorusHandlers","sendTransaction","transactions","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","toString","parseInt","WalletInitializationError","rpcConnectionError","emit","on","configure","_objectSpread","setupProvider","privKey","keyPairGenerator","Keypair","fromSecretKey","Buffer","from","keyPair","toBase58","secretKey","partialSign","signedMsg","nacl","detached","_providerEngineProxy","sig","txns","tx","SolanaPrivateKeyProvider","privateKey","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","name","displayName","blockExplorer","switchSolanaChain","switchChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","createAccountMiddleware","providerFactory","SolanaWallet","signedTransaction","signedTransactions","args","lst","h","low","Layout","b","discr","span","this","offset","r","s","_objectWithoutProperties","source","excluded","key","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","toFailures","StructError","constructor","failure","failures","cached","rest","path","join","assign","TypeError","isObject","x","print","value","JSON","stringify","toFailure","context","struct","branch","type","refinement","Symbol","iterator","run","options","coerce","mask","ctx","coercer","schema","Array","isArray","valid","validator","entries","k","v","ts","t","Map","set","Set","add","refiner","Struct","props","assert","create","is","validate","tuples","tuple","input","done","shiftIterator","define","array","Element","slice","boolean","instance","Class","literal","constant","description","never","nullable","number","isNaN","optional","record","Key","Value","string","Elements","Never","Math","max","keys","union","Structs","map","unknown","condition","generateKeypair","ed25519","utils","randomPrivateKey","privateScalar","getPublicKey","Uint8Array","isOnCurve","ExtendedPoint","fromHex","verify","toBuffer","arr","isBuffer","buffer","byteOffset","byteLength","properties","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","_bn","isPublicKeyData","decoded","BN","equals","eq","toJSON","buf","toArrayLike","zeroPad","alloc","copy","fromPublicKey","seed","programId","concat","publicKeyBytes","sha256","seeds","forEach","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","toStringTag","default","kind","fields","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","defineProperty","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","writable","readonly","get","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","property","BufferLayout","rustString","rsl","_decode","_encode","rslShim","str","chars","getAlloc","getItemAlloc","item","field","elementLayout","layout","decodeLength","bytes","size","elem","shift","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","delete","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","accountKeys","recentBlockhash","indexToProgramIds","account","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","values","nonProgramIds","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","signData","compile","payerKey","byteArray","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","count","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","reduce","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","prefix","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","Transaction","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","hasOwnProperty","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","includes","uniqueMetas","pubkeyString","uniqueIndex","sort","y","localeCompare","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","invariant","_compile","every","pair","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","_addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","confirmTransaction","abortSignal","status","nonceAccountPubkey","nonceValue","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","u64","blob","encodeDecode","bigIntLayout","src","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","freeze","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","BigInt","basePubkey","toPubkey","base","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","error","allocate","owner","transfer","dataLayout","bytesLength","bytesLengthPadding","_rpcEndpoint","all","deployCommitment","finalizeSignature","getSlot","slot","round","MS_PER_SLOT","objToString","objKeys","obj","isArrayProp","propVal","toStr","isFinite","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","floor","getFirstSlotInEpoch","pow","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","globalThis","fetch","RpcWebSocketClient","generate_request_id","url","createRpc","autoconnect","max_reconnects","reconnect","reconnect_interval","underlyingSocket","socket","readyState","reject","notify","RpcWebSocketCommonClient","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","specifiedConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","total","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","process","endpoint","wsEndpoint","httpHeaders","disableRetryOnRateLimit","httpAgent","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","fastStableStringify","unsafeRes","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","customFetch","fetchWithMiddleware","fetchImpl","info","init","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","callback","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","client","createRpcRequest","requests","batch","methodName","createRpcBatchRequest","Infinity","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","getBalanceAndContext","then","catch","e","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","baseSchema","withContext","strategy","rawSignature","aborted","reason","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","abortConfirmation","removeSignatureListener","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","expiryPromise","checkBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","race","outcome","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutMs","timeoutId","TIMED_OUT","clearTimeout","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","lockedWritableAccounts","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","c","extra","block","endSlot","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","to","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","Number","MAX_SAFE_INTEGER","clearInterval","hash","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","close","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPublicKey","secp256k1","isValidPrivateKey","publicKeyCreate","SECP256K1_INSTRUCTION_LAYOUT","keccak_256","recoveryId","Secp256k1Program","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","msgHash","toCompactRawBytes","recovery","ecdsaSign","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","Uint32Array","a","sw","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","charCodeAt","parseHexByte","lowerBound","parseBase","start","mul","min","move","dest","num","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","j","w","off","_strip","limbLen","limbPow","mod","word","imuln","_iaddn","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","self","lo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","output","outLen","prev","mod3","one","nOne","lpow","z","inv","wnd","currentLen","mont","u","_Buffer","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","_defineProperty","_slicedToArray","_createForOfIteratorHelper","_classCallCheck","_createClass","_inherits","_createSuper","_wrapNativeSuper","__createBinding","k2","enumerable","__setModuleDefault","__decorate","decorators","desc","d","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","_Error","_super","_this","fieldPath","originalMessage","fieldName","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","subarray","writeU32","fn","_step","_iterator","f","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","_len","_key","apply","RangeError","readUInt8","readUInt16LE","readUInt32LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","_ref","_ref2","idx","_structSchema$values$","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","_step2","_iterator2","_step2$value","_structSchema$values$2","fieldValue","inRange","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","pop","finished","decoderError","opt_code_point","DEFAULT_ENCODING","String","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","input_stream","code_points","cp","fromCharCode","codePointsToString","opt_string","stringToCodePoints","reversed","reverse","hex","toBigIntBE","padStart","toBufferBE","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","parse","isError","_interopRequireDefault","_regenerator","_asyncToGenerator2","_typeof2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_eventemitter","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","__rest","CommonClient","_EventEmitter","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","timeout","ws_opts","_this2","send","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_x","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","event","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","listeners","EventEmitter","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","sqrtMod","modular_js_1","Field","hmac"],"mappings":"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","file":"static/js/2.7f9d62dc.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateObject = exports.createHmacDrbg = exports.bitMask = exports.bitSet = exports.bitGet = exports.bitLen = exports.utf8ToBytes = exports.equalBytes = exports.concatBytes = exports.ensureBytes = exports.numberToVarBytesBE = exports.numberToBytesLE = exports.numberToBytesBE = exports.bytesToNumberLE = exports.bytesToNumberBE = exports.hexToBytes = exports.hexToNumber = exports.numberToHexUnpadded = exports.bytesToHex = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexports.numberToHexUnpadded = numberToHexUnpadded;\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\nexports.hexToNumber = hexToNumber;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexports.bytesToNumberBE = bytesToNumberBE;\nfunction bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexports.bytesToNumberLE = bytesToNumberLE;\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexports.numberToBytesBE = numberToBytesBE;\nfunction numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\nexports.numberToBytesLE = numberToBytesLE;\n// Unpadded, rarely used\nfunction numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\nexports.numberToVarBytesBE = numberToVarBytesBE;\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nfunction ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\nexports.ensureBytes = ensureBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexports.concatBytes = concatBytes;\nfunction equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\nexports.equalBytes = equalBytes;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nfunction bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\nexports.bitLen = bitLen;\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nfunction bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\nexports.bitGet = bitGet;\n/**\n * Sets single bit at position.\n */\nconst bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\nexports.bitSet = bitSet;\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nconst bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\nexports.bitMask = bitMask;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nfunction createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\nexports.createHmacDrbg = createHmacDrbg;\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nfunction validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\nexports.validateObject = validateObject;\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashToPrivateScalar = exports.FpSqrtEven = exports.FpSqrtOdd = exports.Field = exports.nLength = exports.FpIsSquare = exports.FpDiv = exports.FpInvertBatch = exports.FpPow = exports.validateField = exports.isNegativeLE = exports.FpSqrt = exports.tonelliShanks = exports.invert = exports.pow2 = exports.pow = exports.mod = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nconst utils_js_1 = require(\"./utils.js\");\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nfunction mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nexports.mod = mod;\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nfunction pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\nexports.pow = pow;\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nfunction pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\nexports.pow2 = pow2;\n// Inverses number over modulo\nfunction invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nexports.invert = invert;\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nfunction tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexports.tonelliShanks = tonelliShanks;\nfunction FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\nexports.FpSqrt = FpSqrt;\n// Little-endian check for first LE bit (last BE bit);\nconst isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\nexports.isNegativeLE = isNegativeLE;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nfunction validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return (0, utils_js_1.validateObject)(field, opts);\n}\nexports.validateField = validateField;\n// Generic field functions\nfunction FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\nexports.FpPow = FpPow;\n// 0 is non-invertible: non-batched version will throw on 0\nfunction FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexports.FpInvertBatch = FpInvertBatch;\nfunction FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\nexports.FpDiv = FpDiv;\n// This function returns True whenever the value x is a square in the field F.\nfunction FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\nexports.FpIsSquare = FpIsSquare;\n// CURVE.n lengths\nfunction nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\nexports.nLength = nLength;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nfunction Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: (0, utils_js_1.bitMask)(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? (0, utils_js_1.numberToBytesLE)(num, BYTES) : (0, utils_js_1.numberToBytesBE)(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? (0, utils_js_1.bytesToNumberLE)(bytes) : (0, utils_js_1.bytesToNumberBE)(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexports.Field = Field;\nfunction FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexports.FpSqrtOdd = FpSqrtOdd;\nfunction FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\nexports.FpSqrtEven = FpSqrtEven;\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. curveFn.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nfunction hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = (0, utils_js_1.ensureBytes)('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberLE)(hash) : (0, utils_js_1.bytesToNumberBE)(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\nexports.hashToPrivateScalar = hashToPrivateScalar;\n//# sourceMappingURL=modular.js.map","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { createFetchMiddleware, providerFromEngine } from '@toruslabs/base-controllers';\nimport { mergeMiddleware, createAsyncMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport bs58 from 'bs58';\nimport { ethErrors } from 'eth-rpc-errors';\nimport { PublicKey, Connection, Keypair } from '@solana/web3.js';\nimport nacl from '@toruslabs/tweetnacl-js';\n\nfunction createChainIdMiddleware(chainId) {\n  return function (req, res, next, end) {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return function (req, res, next, end) {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createConfigMiddleware(providerConfig) {\n  var chainId = providerConfig.chainId;\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\nfunction createJsonRpcClient(providerConfig) {\n  var rpcTarget = providerConfig.rpcTarget;\n  var fetchMiddleware = createFetchMiddleware({\n    rpcTarget: rpcTarget\n  });\n  var networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware: networkMiddleware,\n    fetchMiddleware: fetchMiddleware\n  };\n}\n\nfunction createGetAccountsMiddleware(_ref) {\n  var getAccounts = _ref.getAccounts;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(request, response, next) {\n      var method, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== \"getAccounts\")) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", next());\n\n            case 3:\n              if (getAccounts) {\n                _context.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n\n            case 5:\n              _context.next = 7;\n              return getAccounts(request);\n\n            case 7:\n              accounts = _context.sent;\n              response.result = accounts;\n              return _context.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n}\nfunction createRequestAccountsMiddleware(_ref3) {\n  var requestAccounts = _ref3.requestAccounts;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(request, response, next) {\n      var method, accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== \"requestAccounts\")) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", next());\n\n            case 3:\n              if (requestAccounts) {\n                _context2.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n\n            case 5:\n              _context2.next = 7;\n              return requestAccounts(request);\n\n            case 7:\n              accounts = _context2.sent;\n              response.result = accounts;\n              return _context2.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x4, _x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(request, response, next) {\n      var method, result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== targetMethod)) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", next());\n\n            case 3:\n              if (handler) {\n                _context3.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - \".concat(targetMethod, \" not provided\"));\n\n            case 5:\n              _context3.next = 7;\n              return handler(request);\n\n            case 7:\n              result = _context3.sent;\n              response.result = result;\n              return _context3.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x7, _x8, _x9) {\n      return _ref5.apply(this, arguments);\n    };\n  }());\n}\nfunction createSolanaMiddleware(providerHandlers) {\n  var getAccounts = providerHandlers.getAccounts,\n      requestAccounts = providerHandlers.requestAccounts,\n      signTransaction = providerHandlers.signTransaction,\n      signAndSendTransaction = providerHandlers.signAndSendTransaction,\n      signAllTransactions = providerHandlers.signAllTransactions,\n      signMessage = providerHandlers.signMessage,\n      getPrivateKey = providerHandlers.getPrivateKey,\n      getSecretKey = providerHandlers.getSecretKey;\n  return mergeMiddleware([createRequestAccountsMiddleware({\n    requestAccounts: requestAccounts\n  }), createGetAccountsMiddleware({\n    getAccounts: getAccounts\n  }), createGenericJRPCMiddleware(\"signTransaction\", signTransaction), createGenericJRPCMiddleware(\"signAndSendTransaction\", signAndSendTransaction), createGenericJRPCMiddleware(\"signAllTransactions\", signAllTransactions), createGenericJRPCMiddleware(\"signMessage\", signMessage), createGenericJRPCMiddleware(\"solanaPrivateKey\", getPrivateKey), createGenericJRPCMiddleware(\"solanaSecretKey\", getSecretKey)]);\n}\nfunction createChainSwitchMiddleware(_ref6) {\n  var addNewChainConfig = _ref6.addNewChainConfig,\n      switchSolanaChain = _ref6.switchSolanaChain;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"addSolanaChain\", addNewChainConfig), createGenericJRPCMiddleware(\"switchSolanaChain\", switchSolanaChain)]);\n}\nfunction createAccountMiddleware(_ref7) {\n  var updatePrivatekey = _ref7.updatePrivatekey;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"updateAccount\", updatePrivatekey)]);\n}\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper$6(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$6(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$6() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar BaseInjectedProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(BaseInjectedProvider, _BaseProvider);\n\n  var _super = _createSuper$6(BaseInjectedProvider);\n\n  function BaseInjectedProvider(_ref) {\n    var config = _ref.config,\n        state = _ref.state;\n\n    _classCallCheck(this, BaseInjectedProvider);\n\n    return _super.call(this, {\n      config: {\n        chainConfig: _objectSpread$3(_objectSpread$3({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(BaseInjectedProvider, [{\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", Promise.resolve());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function switchChain(_x) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(injectedProvider) {\n        var engine, providerHandlers, solanaMiddleware, configMiddleware, injectedProviderProxy, provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                engine = new JRPCEngine();\n                providerHandlers = this.getProviderHandlers(injectedProvider);\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                engine.push(solanaMiddleware);\n                configMiddleware = createConfigMiddleware(this.config.chainConfig);\n                engine.push(configMiddleware);\n                injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n\n                if (injectedProviderProxy) {\n                  engine.push(injectedProviderProxy);\n                }\n\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context2.next = 12;\n                return this.lookupNetwork();\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setupProvider(_x2) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var chainConfig;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                chainConfig = this.config.chainConfig;\n                this.update({\n                  chainId: chainConfig.chainId\n                });\n                return _context3.abrupt(\"return\", chainConfig.chainId || \"\");\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"getInjectedProviderProxy\",\n    value: function getInjectedProviderProxy(_) {\n      return undefined;\n    }\n  }]);\n\n  return BaseInjectedProvider;\n}(BaseProvider);\n\nvar getBaseProviderHandlers = function getBaseProviderHandlers(injectedProvider) {\n  var providerHandlers = {\n    requestAccounts: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAccounts() {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    getSecretKey: function () {\n      var _getSecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSecretKey() {\n        return _getSecretKey.apply(this, arguments);\n      }\n\n      return getSecretKey;\n    }(),\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req) {\n        var transaction;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return injectedProvider.signTransaction(req.params.message);\n\n              case 2:\n                transaction = _context5.sent;\n                return _context5.abrupt(\"return\", transaction);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function signTransaction(_x) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }(),\n    signMessage: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n        var sigData;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return injectedProvider.signMessage(req.params.message, req.params.display);\n\n              case 2:\n                sigData = _context6.sent;\n                return _context6.abrupt(\"return\", sigData.signature);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function signMessage(_x2) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }(),\n    signAllTransactions: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n        var _req$params, _req$params2;\n\n        var transaction;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length))) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                _context7.next = 4;\n                return injectedProvider.signAllTransactions(req.params.message);\n\n              case 4:\n                transaction = _context7.sent;\n                return _context7.abrupt(\"return\", transaction);\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function signAllTransactions(_x3) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }(),\n    signAndSendTransaction: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n        var txRes;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return injectedProvider.signAndSendTransaction(req.params.message);\n\n              case 2:\n                txRes = _context8.sent;\n                return _context8.abrupt(\"return\", {\n                  signature: txRes.signature\n                });\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function signAndSendTransaction(_x4) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }()\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction createInjectedProviderProxyMiddleware(provider) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, _next) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return provider.request(_objectSpread$2({}, req));\n\n            case 2:\n              result = _context.sent;\n              res.result = result;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\nfunction _createSuper$5(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$5(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$5() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar PhantomInjectedProvider = /*#__PURE__*/function (_BaseInjectedProvider) {\n  _inherits(PhantomInjectedProvider, _BaseInjectedProvider);\n\n  var _super = _createSuper$5(PhantomInjectedProvider);\n\n  function PhantomInjectedProvider() {\n    _classCallCheck(this, PhantomInjectedProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PhantomInjectedProvider, [{\n    key: \"getProviderHandlers\",\n    value: function getProviderHandlers(injectedProvider) {\n      return getBaseProviderHandlers(injectedProvider);\n    }\n  }, {\n    key: \"getInjectedProviderProxy\",\n    value: function getInjectedProviderProxy(injectedProvider) {\n      return createInjectedProviderProxyMiddleware(injectedProvider);\n    }\n  }]);\n\n  return PhantomInjectedProvider;\n}(BaseInjectedProvider);\n\nvar getSlopeHandlers = function getSlopeHandlers(injectedProvider, getProviderEngineProxy) {\n  var providerHandlers = {\n    requestAccounts: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$injectedProvid, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return injectedProvider.connect();\n\n              case 2:\n                _yield$injectedProvid = _context.sent;\n                data = _yield$injectedProvid.data;\n                return _context.abrupt(\"return\", [data.publicKey]);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _yield$injectedProvid2, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return injectedProvider.connect();\n\n              case 2:\n                _yield$injectedProvid2 = _context2.sent;\n                data = _yield$injectedProvid2.data;\n                return _context2.abrupt(\"return\", [data.publicKey]);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAccounts() {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    getSecretKey: function () {\n      var _getSecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSecretKey() {\n        return _getSecretKey.apply(this, arguments);\n      }\n\n      return getSecretKey;\n    }(),\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req) {\n        var txMessage, _yield$injectedProvid3, data, publicKey, signature;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                txMessage = req.params.message;\n\n                if (txMessage) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: \"Invalid transaction message\"\n                });\n\n              case 3:\n                _context5.next = 5;\n                return injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n\n              case 5:\n                _yield$injectedProvid3 = _context5.sent;\n                data = _yield$injectedProvid3.data;\n\n                if (!(!data.publicKey || !data.signature)) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid signature from slope wallet\");\n\n              case 9:\n                publicKey = new PublicKey(data.publicKey);\n                signature = bs58.decode(data.signature);\n                txMessage.addSignature(publicKey, signature);\n                return _context5.abrupt(\"return\", txMessage);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function signTransaction(_x) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }(),\n    signMessage: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return injectedProvider.signMessage(req.params.message);\n\n              case 2:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", bs58.decode(response.data.signature));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function signMessage(_x2) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }(),\n    signAndSendTransaction: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n        var provider, txMessage, _yield$injectedProvid4, data, publicKey, signature, chainConfig, conn, res;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                provider = getProviderEngineProxy();\n\n                if (provider) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 3:\n                txMessage = req.params.message;\n\n                if (txMessage) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: \"Invalid transaction message\"\n                });\n\n              case 6:\n                _context7.next = 8;\n                return injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n\n              case 8:\n                _yield$injectedProvid4 = _context7.sent;\n                data = _yield$injectedProvid4.data;\n\n                if (!(!data.publicKey || !data.signature)) {\n                  _context7.next = 12;\n                  break;\n                }\n\n                throw new Error(\"Invalid signature from slope wallet\");\n\n              case 12:\n                publicKey = new PublicKey(data.publicKey);\n                signature = bs58.decode(data.signature);\n                txMessage.addSignature(publicKey, signature);\n                _context7.next = 17;\n                return provider.request({\n                  method: \"solana_provider_config\",\n                  params: []\n                });\n\n              case 17:\n                chainConfig = _context7.sent;\n                conn = new Connection(chainConfig.rpcTarget);\n                _context7.next = 21;\n                return conn.sendRawTransaction(txMessage.serialize());\n\n              case 21:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  signature: res\n                });\n\n              case 23:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function signAndSendTransaction(_x3) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }(),\n    signAllTransactions: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n        var _req$params, _req$params2, _data$signatures;\n\n        var allTxns, length, unsignedTx, i, _yield$injectedProvid5, msg, data, publicKey, signature;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length))) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                allTxns = req.params.message;\n                length = allTxns.length;\n                unsignedTx = [];\n\n                for (i = 0; i < length; i++) {\n                  unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n                }\n\n                _context8.next = 8;\n                return injectedProvider.signAllTransactions(unsignedTx);\n\n              case 8:\n                _yield$injectedProvid5 = _context8.sent;\n                msg = _yield$injectedProvid5.msg;\n                data = _yield$injectedProvid5.data;\n\n                if (!(!data.publicKey || ((_data$signatures = data.signatures) === null || _data$signatures === void 0 ? void 0 : _data$signatures.length) !== length)) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                throw new Error(msg);\n\n              case 13:\n                publicKey = new PublicKey(data.publicKey);\n\n                for (i = 0; i < length; i++) {\n                  signature = bs58.decode(data.signatures[i]);\n                  allTxns[i].addSignature(publicKey, signature);\n                }\n\n                return _context8.abrupt(\"return\", allTxns);\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function signAllTransactions(_x4) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  };\n  return providerHandlers;\n};\n\nfunction _createSuper$4(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$4() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SlopeInjectedProxyProvider = /*#__PURE__*/function (_BaseInjectedProvider) {\n  _inherits(SlopeInjectedProxyProvider, _BaseInjectedProvider);\n\n  var _super = _createSuper$4(SlopeInjectedProxyProvider);\n\n  function SlopeInjectedProxyProvider() {\n    _classCallCheck(this, SlopeInjectedProxyProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SlopeInjectedProxyProvider, [{\n    key: \"getProviderHandlers\",\n    value: function getProviderHandlers(injectedProvider) {\n      return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n    }\n  }]);\n\n  return SlopeInjectedProxyProvider;\n}(BaseInjectedProvider);\n\nvar getSolflareHandlers = function getSolflareHandlers(injectedProvider, getProviderEngineProxy) {\n  var solflareProviderHandlers = getBaseProviderHandlers(injectedProvider);\n\n  solflareProviderHandlers.signAndSendTransaction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req) {\n      var provider, transaction, chainConfig, conn, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              provider = getProviderEngineProxy();\n\n              if (provider) {\n                _context.next = 3;\n                break;\n              }\n\n              throw ethErrors.provider.custom({\n                message: \"Provider is not initialized\",\n                code: 4902\n              });\n\n            case 3:\n              _context.next = 5;\n              return injectedProvider.signTransaction(req.params.message);\n\n            case 5:\n              transaction = _context.sent;\n              _context.next = 8;\n              return provider.request({\n                method: \"solana_provider_config\",\n                params: []\n              });\n\n            case 8:\n              chainConfig = _context.sent;\n              conn = new Connection(chainConfig.rpcTarget);\n              _context.next = 12;\n              return conn.sendRawTransaction(transaction.serialize());\n\n            case 12:\n              res = _context.sent;\n              return _context.abrupt(\"return\", {\n                signature: res\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return solflareProviderHandlers;\n};\n\nfunction _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$3() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SolflareInjectedProvider = /*#__PURE__*/function (_BaseInjectedProvider) {\n  _inherits(SolflareInjectedProvider, _BaseInjectedProvider);\n\n  var _super = _createSuper$3(SolflareInjectedProvider);\n\n  function SolflareInjectedProvider() {\n    _classCallCheck(this, SolflareInjectedProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SolflareInjectedProvider, [{\n    key: \"getProviderHandlers\",\n    value: function getProviderHandlers(injectedProvider) {\n      return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n    }\n  }]);\n\n  return SolflareInjectedProvider;\n}(BaseInjectedProvider);\n\nvar getSolletHandlers = function getSolletHandlers(injectedProvider, getProviderEngineProxy) {\n  var providerHandlers = getBaseProviderHandlers(injectedProvider);\n\n  providerHandlers.signMessage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req) {\n      var _yield$injectedProvid, signature;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return injectedProvider.sign(req.params.message, \"utf8\");\n\n            case 2:\n              _yield$injectedProvid = _context.sent;\n              signature = _yield$injectedProvid.signature;\n              return _context.abrupt(\"return\", signature);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  providerHandlers.signAndSendTransaction = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req) {\n      var provider, transaction, chainConfig, conn, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              provider = getProviderEngineProxy();\n\n              if (provider) {\n                _context2.next = 3;\n                break;\n              }\n\n              throw ethErrors.provider.custom({\n                message: \"Provider is not initialized\",\n                code: 4902\n              });\n\n            case 3:\n              _context2.next = 5;\n              return injectedProvider.signTransaction(req.params.message);\n\n            case 5:\n              transaction = _context2.sent;\n              _context2.next = 8;\n              return provider.request({\n                method: \"solana_provider_config\",\n                params: []\n              });\n\n            case 8:\n              chainConfig = _context2.sent;\n              conn = new Connection(chainConfig.rpcTarget);\n              _context2.next = 12;\n              return conn.sendRawTransaction(transaction.serialize());\n\n            case 12:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                signature: res\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return providerHandlers;\n};\n\nfunction _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$2() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SolletInjectedProvider = /*#__PURE__*/function (_BaseInjectedProvider) {\n  _inherits(SolletInjectedProvider, _BaseInjectedProvider);\n\n  var _super = _createSuper$2(SolletInjectedProvider);\n\n  function SolletInjectedProvider() {\n    _classCallCheck(this, SolletInjectedProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SolletInjectedProvider, [{\n    key: \"getProviderHandlers\",\n    value: function getProviderHandlers(injectedProvider) {\n      return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n    }\n  }]);\n\n  return SolletInjectedProvider;\n}(BaseInjectedProvider);\n\nvar getTorusHandlers = function getTorusHandlers(injectedProvider) {\n  var providerHandlers = {\n    requestAccounts: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return injectedProvider.request({\n                  method: \"solana_requestAccounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context.sent;\n                return _context.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return injectedProvider.request({\n                  method: \"solana_requestAccounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context2.sent;\n                return _context2.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAccounts() {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    getSecretKey: function () {\n      var _getSecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSecretKey() {\n        return _getSecretKey.apply(this, arguments);\n      }\n\n      return getSecretKey;\n    }(),\n    signMessage: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req) {\n        var _req$params;\n\n        var message;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if ((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                _context5.next = 4;\n                return injectedProvider.signMessage(req.params.message);\n\n              case 4:\n                message = _context5.sent;\n                return _context5.abrupt(\"return\", message);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function signMessage(_x) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }(),\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n        var _req$params2;\n\n        var txMessage, response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if ((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                txMessage = req.params.message;\n                _context6.next = 5;\n                return injectedProvider.signTransaction(txMessage);\n\n              case 5:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function signTransaction(_x2) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }(),\n    signAndSendTransaction: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n        var _req$params3;\n\n        var txMessage, response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if ((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                txMessage = req.params.message;\n                _context7.next = 5;\n                return injectedProvider.sendTransaction(txMessage);\n\n              case 5:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  signature: response\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function signAndSendTransaction(_x3) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }(),\n    signAllTransactions: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n        var _req$params4, _req$params5;\n\n        var transactions, response;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length))) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                transactions = req.params.message;\n                _context8.next = 5;\n                return injectedProvider.signAllTransactions(transactions);\n\n              case 5:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function signAllTransactions(_x4) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar TorusInjectedProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(TorusInjectedProvider, _BaseProvider);\n\n  var _super = _createSuper$1(TorusInjectedProvider);\n\n  function TorusInjectedProvider(_ref) {\n    var config = _ref.config,\n        state = _ref.state;\n\n    _classCallCheck(this, TorusInjectedProvider);\n\n    return _super.call(this, {\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(TorusInjectedProvider, [{\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", Promise.resolve());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function switchChain(_x) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(injectedProvider) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.handleInjectedProviderUpdate(injectedProvider);\n                _context2.next = 3;\n                return this.setupEngine(injectedProvider);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setupProvider(_x2) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var chainId, connectedChainId, connectedHexChainId;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.provider) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Torus solana provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainId = this.config.chainConfig.chainId;\n                _context3.next = 5;\n                return this.provider.request({\n                  method: \"solana_chainId\"\n                });\n\n              case 5:\n                connectedChainId = _context3.sent;\n                connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : \"0x\".concat(parseInt(connectedChainId, 10).toString(16));\n\n                if (!(chainId !== connectedHexChainId)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n\n              case 9:\n                this.update({\n                  chainId: connectedHexChainId\n                });\n                this.provider.emit(\"connect\", {\n                  chainId: this.state.chainId\n                });\n                this.provider.emit(\"chainChanged\", this.state.chainId);\n                return _context3.abrupt(\"return\", this.state.chainId);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"setupEngine\",\n    value: function () {\n      var _setupEngine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(injectedProvider) {\n        var providerHandlers, solanaMiddleware, injectedProviderProxy, engine, provider;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                providerHandlers = getTorusHandlers(injectedProvider);\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n                engine = new JRPCEngine();\n                engine.push(solanaMiddleware);\n                engine.push(injectedProviderProxy);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context4.next = 10;\n                return this.lookupNetwork();\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setupEngine(_x3) {\n        return _setupEngine.apply(this, arguments);\n      }\n\n      return setupEngine;\n    }()\n  }, {\n    key: \"handleInjectedProviderUpdate\",\n    value: function () {\n      var _handleInjectedProviderUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(injectedProvider) {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                injectedProvider.on(\"accountsChanged\", /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(accounts) {\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _this.provider.emit(\"accountsChanged\", accounts);\n\n                          case 1:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x5) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                injectedProvider.on(\"chainChanged\", /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(chainId) {\n                    var connectedHexChainId;\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            connectedHexChainId = isHexStrict(chainId) ? chainId : \"0x\".concat(parseInt(chainId, 10).toString(16)); // Check if chainId changed and trigger event\n\n                            _this.configure({\n                              chainConfig: _objectSpread$1(_objectSpread$1({}, _this.config.chainConfig), {}, {\n                                chainId: connectedHexChainId\n                              })\n                            });\n\n                            _context6.next = 4;\n                            return _this.setupProvider(injectedProvider);\n\n                          case 4:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function (_x6) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function handleInjectedProviderUpdate(_x4) {\n        return _handleInjectedProviderUpdate.apply(this, arguments);\n      }\n\n      return handleInjectedProviderUpdate;\n    }()\n  }]);\n\n  return TorusInjectedProvider;\n}(BaseProvider);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction getProviderHandlers(_x) {\n  return _getProviderHandlers.apply(this, arguments);\n}\n\nfunction _getProviderHandlers() {\n  _getProviderHandlers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(_ref) {\n    var privKey, getProviderEngineProxy, keyPairGenerator, keyPair, providerHandlers;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            privKey = _ref.privKey, getProviderEngineProxy = _ref.getProviderEngineProxy;\n\n            keyPairGenerator = function keyPairGenerator() {\n              return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n            };\n\n            if (!(typeof privKey !== \"string\")) {\n              _context9.next = 4;\n              break;\n            }\n\n            throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n\n          case 4:\n            keyPair = keyPairGenerator();\n            providerHandlers = {\n              requestAccounts: function () {\n                var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          return _context.abrupt(\"return\", [keyPair.publicKey.toBase58()]);\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                function requestAccounts() {\n                  return _requestAccounts.apply(this, arguments);\n                }\n\n                return requestAccounts;\n              }(),\n              getAccounts: function () {\n                var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          return _context2.abrupt(\"return\", [keyPair.publicKey.toBase58()]);\n\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                function getAccounts() {\n                  return _getAccounts.apply(this, arguments);\n                }\n\n                return getAccounts;\n              }(),\n              getPrivateKey: function () {\n                var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          return _context3.abrupt(\"return\", privKey);\n\n                        case 1:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                function getPrivateKey() {\n                  return _getPrivateKey.apply(this, arguments);\n                }\n\n                return getPrivateKey;\n              }(),\n              getSecretKey: function () {\n                var _getSecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          return _context4.abrupt(\"return\", bs58.encode(keyPair.secretKey));\n\n                        case 1:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                function getSecretKey() {\n                  return _getSecretKey.apply(this, arguments);\n                }\n\n                return getSecretKey;\n              }(),\n              signTransaction: function () {\n                var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req) {\n                  var _req$params;\n\n                  var transaction;\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if ((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) {\n                            _context5.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          transaction = req.params.message;\n                          transaction.partialSign(keyPair);\n                          return _context5.abrupt(\"return\", transaction);\n\n                        case 5:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                function signTransaction(_x2) {\n                  return _signTransaction.apply(this, arguments);\n                }\n\n                return signTransaction;\n              }(),\n              signMessage: function () {\n                var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n                  var _req$params2;\n\n                  var signedMsg;\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          if ((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message) {\n                            _context6.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n                          return _context6.abrupt(\"return\", signedMsg);\n\n                        case 4:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                function signMessage(_x3) {\n                  return _signMessage.apply(this, arguments);\n                }\n\n                return signMessage;\n              }(),\n              signAndSendTransaction: function () {\n                var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n                  var _req$params3;\n\n                  var _providerEngineProxy, transaction, sig;\n\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if ((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message) {\n                            _context7.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          _providerEngineProxy = getProviderEngineProxy();\n\n                          if (_providerEngineProxy) {\n                            _context7.next = 5;\n                            break;\n                          }\n\n                          throw ethErrors.provider.custom({\n                            message: \"Provider is not initialized\",\n                            code: 4902\n                          });\n\n                        case 5:\n                          transaction = req.params.message;\n                          transaction.sign(keyPair);\n                          _context7.next = 9;\n                          return _providerEngineProxy.request({\n                            method: \"sendTransaction\",\n                            params: [bs58.encode(transaction.serialize())]\n                          });\n\n                        case 9:\n                          sig = _context7.sent;\n                          return _context7.abrupt(\"return\", {\n                            signature: sig\n                          });\n\n                        case 11:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                function signAndSendTransaction(_x4) {\n                  return _signAndSendTransaction.apply(this, arguments);\n                }\n\n                return signAndSendTransaction;\n              }(),\n              signAllTransactions: function () {\n                var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n                  var _req$params4, _req$params5, _req$params6;\n\n                  var txns, _iterator, _step, tx, transaction;\n\n                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          if (!(!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length))) {\n                            _context8.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          txns = (_req$params6 = req.params) === null || _req$params6 === void 0 ? void 0 : _req$params6.message;\n                          _iterator = _createForOfIteratorHelper(txns || []);\n\n                          try {\n                            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                              tx = _step.value;\n                              transaction = tx;\n                              transaction.partialSign(keyPair);\n                            }\n                          } catch (err) {\n                            _iterator.e(err);\n                          } finally {\n                            _iterator.f();\n                          }\n\n                          return _context8.abrupt(\"return\", txns);\n\n                        case 6:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                function signAllTransactions(_x5) {\n                  return _signAllTransactions.apply(this, arguments);\n                }\n\n                return signAllTransactions;\n              }()\n            };\n            return _context9.abrupt(\"return\", providerHandlers);\n\n          case 7:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getProviderHandlers.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SolanaPrivateKeyProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(SolanaPrivateKeyProvider, _BaseProvider);\n\n  var _super = _createSuper(SolanaPrivateKeyProvider);\n\n  function SolanaPrivateKeyProvider(_ref) {\n    var config = _ref.config,\n        state = _ref.state;\n\n    _classCallCheck(this, SolanaPrivateKeyProvider);\n\n    return _super.call(this, {\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(SolanaPrivateKeyProvider, [{\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.state.privateKey) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Private key is not found in state, plz pass it in constructor state param\",\n                  code: 4902\n                });\n\n              case 2:\n                _context.next = 4;\n                return this.setupProvider(this.state.privateKey);\n\n              case 4:\n                return _context.abrupt(\"return\", this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(privKey) {\n        var providerHandlers, solanaMiddleware, engine, _createJsonRpcClient, networkMiddleware, provider;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getProviderHandlers({\n                  privKey: privKey,\n                  getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n                });\n\n              case 2:\n                providerHandlers = _context2.sent;\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                engine = new JRPCEngine();\n                _createJsonRpcClient = createJsonRpcClient(this.config.chainConfig), networkMiddleware = _createJsonRpcClient.networkMiddleware;\n                engine.push(this.getChainSwitchMiddleware());\n                engine.push(this.getAccountMiddleware());\n                engine.push(solanaMiddleware);\n                engine.push(networkMiddleware);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context2.next = 14;\n                return this.lookupNetwork();\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setupProvider(_x) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"updateAccount\",\n    value: function () {\n      var _updateAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n        var existingKey;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                _context3.next = 4;\n                return this._providerEngineProxy.request({\n                  method: \"solanaPrivateKey\"\n                });\n\n              case 4:\n                existingKey = _context3.sent;\n\n                if (!(existingKey !== params.privateKey)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _context3.next = 8;\n                return this.setupProvider(params.privateKey);\n\n              case 8:\n                _context3.t0 = this._providerEngineProxy;\n                _context3.next = 11;\n                return this._providerEngineProxy.request({\n                  method: \"requestAccounts\"\n                });\n\n              case 11:\n                _context3.t1 = _context3.sent;\n                _context3.t2 = {\n                  accounts: _context3.t1\n                };\n\n                _context3.t0.emit.call(_context3.t0, \"accountsChanged\", _context3.t2);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateAccount(_x2) {\n        return _updateAccount.apply(this, arguments);\n      }\n\n      return updateAccount;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params) {\n        var chainConfig, privKey;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainConfig = this.getChainConfig(params.chainId);\n                this.update({\n                  chainId: \"loading\"\n                });\n                this.configure({\n                  chainConfig: chainConfig\n                });\n                _context4.next = 7;\n                return this._providerEngineProxy.request({\n                  method: \"solanaPrivateKey\"\n                });\n\n              case 7:\n                privKey = _context4.sent;\n                _context4.next = 10;\n                return this.setupProvider(privKey);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function switchChain(_x3) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var health, chainConfig;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                _context5.next = 4;\n                return this._providerEngineProxy.request({\n                  method: \"getHealth\",\n                  params: []\n                });\n\n              case 4:\n                health = _context5.sent;\n                chainConfig = this.config.chainConfig;\n\n                if (!(health !== \"ok\")) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                throw WalletInitializationError.rpcConnectionError(\"Failed to lookup network for following rpc target: \".concat(chainConfig.rpcTarget));\n\n              case 8:\n                this.update({\n                  chainId: chainConfig.chainId\n                });\n\n                if (this.state.chainId !== chainConfig.chainId) {\n                  this.provider.emit(\"chainChanged\", this.state.chainId);\n                  this.provider.emit(\"connect\", {\n                    chainId: this.state.chainId\n                  });\n                }\n\n                return _context5.abrupt(\"return\", this.state.chainId);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"getChainSwitchMiddleware\",\n    value: function getChainSwitchMiddleware() {\n      var _this = this;\n\n      var chainSwitchHandlers = {\n        addNewChainConfig: function () {\n          var _addNewChainConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n            var _req$params, chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency;\n\n            return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    if (req.params) {\n                      _context6.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    _req$params = req.params, chainId = _req$params.chainId, chainName = _req$params.chainName, rpcUrls = _req$params.rpcUrls, blockExplorerUrls = _req$params.blockExplorerUrls, nativeCurrency = _req$params.nativeCurrency;\n\n                    if (chainId) {\n                      _context6.next = 5;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n\n                  case 5:\n                    if (!(!rpcUrls || rpcUrls.length === 0)) {\n                      _context6.next = 7;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n\n                  case 7:\n                    if (nativeCurrency) {\n                      _context6.next = 9;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n                  case 9:\n                    _this.addChain({\n                      chainNamespace: CHAIN_NAMESPACES.SOLANA,\n                      chainId: chainId,\n                      ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"SOL\",\n                      tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Solana\",\n                      displayName: chainName,\n                      rpcTarget: rpcUrls[0],\n                      blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n                    });\n\n                  case 10:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6);\n          }));\n\n          function addNewChainConfig(_x4) {\n            return _addNewChainConfig.apply(this, arguments);\n          }\n\n          return addNewChainConfig;\n        }(),\n        switchSolanaChain: function () {\n          var _switchSolanaChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    if (req.params) {\n                      _context7.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    if (req.params.chainId) {\n                      _context7.next = 4;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n\n                  case 4:\n                    _context7.next = 6;\n                    return _this.switchChain(req.params);\n\n                  case 6:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7);\n          }));\n\n          function switchSolanaChain(_x5) {\n            return _switchSolanaChain.apply(this, arguments);\n          }\n\n          return switchSolanaChain;\n        }()\n      };\n      var chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n      return chainSwitchMiddleware;\n    }\n  }, {\n    key: \"getAccountMiddleware\",\n    value: function getAccountMiddleware() {\n      var _this2 = this;\n\n      var accountHandlers = {\n        updatePrivatekey: function () {\n          var _updatePrivatekey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n            var privateKey;\n            return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    if (req.params) {\n                      _context8.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    if (req.params.privateKey) {\n                      _context8.next = 4;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n\n                  case 4:\n                    privateKey = req.params.privateKey;\n                    _context8.next = 7;\n                    return _this2.updateAccount({\n                      privateKey: privateKey\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _callee8);\n          }));\n\n          function updatePrivatekey(_x6) {\n            return _updatePrivatekey.apply(this, arguments);\n          }\n\n          return updatePrivatekey;\n        }()\n      };\n      return createAccountMiddleware(accountHandlers);\n    }\n  }]);\n\n  return SolanaPrivateKeyProvider;\n}(BaseProvider);\n\n_defineProperty(SolanaPrivateKeyProvider, \"getProviderInstance\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(params) {\n    var providerFactory;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            providerFactory = new SolanaPrivateKeyProvider({\n              config: {\n                chainConfig: params.chainConfig\n              }\n            });\n            _context9.next = 3;\n            return providerFactory.setupProvider(params.privKey);\n\n          case 3:\n            return _context9.abrupt(\"return\", providerFactory);\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x7) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\nvar SolanaWallet = /*#__PURE__*/function () {\n  function SolanaWallet(provider) {\n    _classCallCheck(this, SolanaWallet);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = provider;\n  }\n\n  _createClass(SolanaWallet, [{\n    key: \"requestAccounts\",\n    value: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.provider.request({\n                  method: \"requestAccounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context.sent;\n                return _context.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }()\n  }, {\n    key: \"signAndSendTransaction\",\n    value: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transaction) {\n        var _yield$this$provider$, signature;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.provider.request({\n                  method: \"signAndSendTransaction\",\n                  params: {\n                    message: transaction\n                  }\n                });\n\n              case 2:\n                _yield$this$provider$ = _context2.sent;\n                signature = _yield$this$provider$.signature;\n                return _context2.abrupt(\"return\", {\n                  signature: signature\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function signAndSendTransaction(_x) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }()\n  }, {\n    key: \"signTransaction\",\n    value: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transaction) {\n        var signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.provider.request({\n                  method: \"signTransaction\",\n                  params: {\n                    message: transaction\n                  }\n                });\n\n              case 2:\n                signedTransaction = _context3.sent;\n                return _context3.abrupt(\"return\", signedTransaction);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function signTransaction(_x2) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }()\n  }, {\n    key: \"signAllTransactions\",\n    value: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transactions) {\n        var signedTransactions;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.provider.request({\n                  method: \"signAllTransactions\",\n                  params: {\n                    message: transactions\n                  }\n                });\n\n              case 2:\n                signedTransactions = _context4.sent;\n                return _context4.abrupt(\"return\", signedTransactions);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function signAllTransactions(_x3) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  }, {\n    key: \"signMessage\",\n    value: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.provider.request({\n                  method: \"signMessage\",\n                  params: {\n                    message: data\n                  }\n                });\n\n              case 2:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function signMessage(_x4) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(args) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.provider.request(args);\n\n              case 2:\n                result = _context6.sent;\n                return _context6.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function request(_x5) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }]);\n\n  return SolanaWallet;\n}();\n\nexport { PhantomInjectedProvider, SlopeInjectedProxyProvider, SolanaPrivateKeyProvider, SolanaWallet, SolflareInjectedProvider, SolletInjectedProvider, TorusInjectedProvider };\n//# sourceMappingURL=solanaProvider.esm.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateBasic = exports.wNAF = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nfunction wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexports.wNAF = wNAF;\nfunction validateBasic(curve) {\n    (0, modular_js_1.validateField)(curve.Fp);\n    (0, utils_js_1.validateObject)(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...(0, modular_js_1.nLength)(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\nexports.validateBasic = validateBasic;\n//# sourceMappingURL=curve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHasher = exports.isogenyMap = exports.hash_to_field = exports.expand_message_xof = exports.expand_message_xmd = void 0;\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\nfunction validateDST(dst) {\n    if (dst instanceof Uint8Array)\n        return dst;\n    if (typeof dst === 'string')\n        return (0, utils_js_1.utf8ToBytes)(dst);\n    throw new Error('DST must be Uint8Array or string');\n}\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = utils_js_1.bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction isBytes(item) {\n    if (!(item instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n}\nfunction isNum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nfunction expand_message_xmd(msg, DST, lenInBytes, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    if (DST.length > 255)\n        DST = H((0, utils_js_1.concatBytes)((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = (0, utils_js_1.concatBytes)(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H((0, utils_js_1.concatBytes)(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H((0, utils_js_1.concatBytes)(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H((0, utils_js_1.concatBytes)(...args));\n    }\n    const pseudo_random_bytes = (0, utils_js_1.concatBytes)(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nexports.expand_message_xmd = expand_message_xmd;\nfunction expand_message_xof(msg, DST, lenInBytes, k, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\nexports.expand_message_xof = expand_message_xof;\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nfunction hash_to_field(msg, count, options) {\n    (0, utils_js_1.validateObject)(options, {\n        DST: 'string',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    isBytes(msg);\n    isNum(count);\n    const DST = validateDST(_DST);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = (0, modular_js_1.mod)(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexports.hash_to_field = hash_to_field;\nfunction isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexports.isogenyMap = isogenyMap;\nfunction createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\nexports.createHasher = createHasher;\n//# sourceMappingURL=hash-to-curve.js.map","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapToCurveSimpleSWU = exports.SWUFpSqrtRatio = exports.weierstrass = exports.weierstrassPoints = exports.DER = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nconst mod = require(\"./modular.js\");\nconst ut = require(\"./utils.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst curve_js_1 = require(\"./curve.js\");\nfunction validatePointOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexports.DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = exports.DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = exports.DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = exports.DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = exports.DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nfunction weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((c, point, isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE((0, utils_js_1.ensureBytes)('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes((0, utils_js_1.ensureBytes)('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            // Zero is valid point too!\n            if (this.is0()) {\n                if (CURVE.allowInfinityPoint)\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = (0, curve_js_1.wNAF)(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nexports.weierstrassPoints = weierstrassPoints;\nfunction validateOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nfunction weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = (0, utils_js_1.ensureBytes)('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = exports.DER.toSig((0, utils_js_1.ensureBytes)('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN((0, utils_js_1.ensureBytes)('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return exports.DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size (nBitLength+64)\n         * as per FIPS 186 B.4.1 with modulo bias being neglible.\n         */\n        randomPrivateKey: () => {\n            const rand = CURVE.randomBytes(Fp.BYTES + 8);\n            const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n            return ut.numberToBytesBE(num, CURVE.nByteLength);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);\n        if (prehash)\n            msgHash = (0, utils_js_1.ensureBytes)('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push((0, utils_js_1.ensureBytes)('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);\n        publicKey = (0, utils_js_1.ensureBytes)('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof exports.DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\nexports.weierstrass = weierstrass;\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nfunction SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\nexports.SWUFpSqrtRatio = SWUFpSqrtRatio;\n/**\n * From draft-irtf-cfrg-hash-to-curve-16\n */\nfunction mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\nexports.mapToCurveSimpleSWU = mapToCurveSimpleSWU;\n//# sourceMappingURL=weierstrass.js.map","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      };\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = this._buildArgs(accounts?.length ? [accounts] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = process.env.TEST_LIVE ? 3762 : 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hash_to_ristretto255 = exports.RistrettoPoint = exports.encodeToCurve = exports.hashToCurve = exports.edwardsToMontgomeryPriv = exports.edwardsToMontgomery = exports.edwardsToMontgomeryPub = exports.x25519 = exports.ed25519ph = exports.ed25519ctx = exports.ed25519 = exports.ED25519_TORSION_SUBGROUP = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst edwards_js_1 = require(\"./abstract/edwards.js\");\nconst montgomery_js_1 = require(\"./abstract/montgomery.js\");\nconst modular_js_1 = require(\"./abstract/modular.js\");\nconst utils_js_1 = require(\"./abstract/utils.js\");\nconst hash_to_curve_js_1 = require(\"./abstract/hash-to-curve.js\");\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = ((0, modular_js_1.pow2)(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = ((0, modular_js_1.pow2)(b4, _1n, P) * x) % P; // x^31\n    const b10 = ((0, modular_js_1.pow2)(b5, _5n, P) * b5) % P;\n    const b20 = ((0, modular_js_1.pow2)(b10, _10n, P) * b10) % P;\n    const b40 = ((0, modular_js_1.pow2)(b20, _20n, P) * b20) % P;\n    const b80 = ((0, modular_js_1.pow2)(b40, _40n, P) * b40) % P;\n    const b160 = ((0, modular_js_1.pow2)(b80, _80n, P) * b80) % P;\n    const b240 = ((0, modular_js_1.pow2)(b160, _80n, P) * b80) % P;\n    const b250 = ((0, modular_js_1.pow2)(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = ((0, modular_js_1.pow2)(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = (0, modular_js_1.mod)(v * v * v, P); // v³\n    const v7 = (0, modular_js_1.mod)(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = (0, modular_js_1.mod)(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = (0, modular_js_1.mod)(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = (0, modular_js_1.mod)(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === (0, modular_js_1.mod)(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === (0, modular_js_1.mod)(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((0, modular_js_1.isNegativeLE)(x, P))\n        x = (0, modular_js_1.mod)(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexports.ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = (0, modular_js_1.Field)(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512_1.sha512,\n    randomBytes: utils_1.randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexports.ed25519 = (0, edwards_js_1.twistedEdwards)(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return (0, utils_1.concatBytes)((0, utils_1.utf8ToBytes)('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexports.ed25519ctx = (0, edwards_js_1.twistedEdwards)({ ...ed25519Defaults, domain: ed25519_domain });\nexports.ed25519ph = (0, edwards_js_1.twistedEdwards)({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512_1.sha512,\n});\nexports.x25519 = (() => (0, montgomery_js_1.montgomery)({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return (0, modular_js_1.mod)((0, modular_js_1.pow2)(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes: utils_1.randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nfunction edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = exports.ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexports.edwardsToMontgomeryPub = edwardsToMontgomeryPub;\nexports.edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nfunction edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\nexports.edwardsToMontgomeryPriv = edwardsToMontgomeryPriv;\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = (0, modular_js_1.FpSqrtEven)(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512_1.sha512,\n}))();\nexports.hashToCurve = (() => htf.hashToCurve)();\nexports.encodeToCurve = (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => exports.ed25519.CURVE.Fp.create((0, utils_js_1.bytesToNumberLE)(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = exports.ed25519.CURVE;\n    const P = exports.ed25519.CURVE.Fp.ORDER;\n    const mod = exports.ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!(0, modular_js_1.isNegativeLE)(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new exports.ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(exports.ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = (0, utils_js_1.ensureBytes)('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = (0, utils_js_1.ensureBytes)('ristrettoHex', hex, 32);\n        const { a, d } = exports.ed25519.CURVE;\n        const P = exports.ed25519.CURVE.Fp.ORDER;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!(0, utils_js_1.equalBytes)((0, utils_js_1.numberToBytesLE)(s, 32), hex) || (0, modular_js_1.isNegativeLE)(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if ((0, modular_js_1.isNegativeLE)(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || (0, modular_js_1.isNegativeLE)(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new exports.ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = exports.ed25519.CURVE.Fp.ORDER;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if ((0, modular_js_1.isNegativeLE)(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if ((0, modular_js_1.isNegativeLE)(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if ((0, modular_js_1.isNegativeLE)(s, P))\n            s = mod(-s);\n        return (0, utils_js_1.numberToBytesLE)(s, 32); // 11\n    }\n    toHex() {\n        return (0, utils_js_1.bytesToHex)(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nexports.RistrettoPoint = (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(exports.ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(exports.ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/14/\n// Appendix B.  Hashing to ristretto255\nconst hash_to_ristretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? (0, utils_1.utf8ToBytes)(d) : d;\n    const uniform_bytes = (0, hash_to_curve_js_1.expand_message_xmd)(msg, DST, 64, sha512_1.sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexports.hash_to_ristretto255 = hash_to_ristretto255;\n//# sourceMappingURL=ed25519.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.twistedEdwards = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nconst modular_js_1 = require(\"./modular.js\");\nconst ut = require(\"./utils.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst curve_js_1 = require(\"./curve.js\");\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nfunction twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = (0, utils_js_1.ensureBytes)('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = (0, curve_js_1.wNAF)(Point, nByteLength * 8);\n    function modN(a) {\n        return (0, modular_js_1.mod)(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = (0, utils_js_1.ensureBytes)('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = (0, utils_js_1.ensureBytes)('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, (0, utils_js_1.ensureBytes)('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = (0, utils_js_1.ensureBytes)('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return (0, utils_js_1.ensureBytes)('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = (0, utils_js_1.ensureBytes)('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = (0, utils_js_1.ensureBytes)('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\nexports.twistedEdwards = twistedEdwards;\n//# sourceMappingURL=edwards.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.montgomery = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    (0, utils_js_1.validateObject)(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nfunction montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => (0, modular_js_1.mod)(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => (0, modular_js_1.pow)(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // Accepts 0 as well\n    function assertFieldElement(n) {\n        if (typeof n === 'bigint' && _0n <= n && n < P)\n            return n;\n        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(pointU, scalar) {\n        const u = assertFieldElement(pointU);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = assertFieldElement(scalar);\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return (0, utils_js_1.numberToBytesLE)(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n        // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n        const u = (0, utils_js_1.ensureBytes)('u coordinate', uEnc, montgomeryBytes);\n        // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n        if (fieldLen === montgomeryBytes)\n            u[fieldLen - 1] &= 127; // 0b0111_1111\n        return (0, utils_js_1.bytesToNumberLE)(u);\n    }\n    function decodeScalar(n) {\n        const bytes = (0, utils_js_1.ensureBytes)('scalar', n);\n        if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n        return (0, utils_js_1.bytesToNumberLE)(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\nexports.montgomery = montgomery;\n//# sourceMappingURL=montgomery.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeToCurve = exports.hashToCurve = exports.schnorr = exports.secp256k1 = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst modular_js_1 = require(\"./abstract/modular.js\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\nconst utils_js_1 = require(\"./abstract/utils.js\");\nconst hash_to_curve_js_1 = require(\"./abstract/hash-to-curve.js\");\nconst _shortw_utils_js_1 = require(\"./_shortw_utils.js\");\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = ((0, modular_js_1.pow2)(b3, _3n, P) * b3) % P;\n    const b9 = ((0, modular_js_1.pow2)(b6, _3n, P) * b3) % P;\n    const b11 = ((0, modular_js_1.pow2)(b9, _2n, P) * b2) % P;\n    const b22 = ((0, modular_js_1.pow2)(b11, _11n, P) * b11) % P;\n    const b44 = ((0, modular_js_1.pow2)(b22, _22n, P) * b22) % P;\n    const b88 = ((0, modular_js_1.pow2)(b44, _44n, P) * b44) % P;\n    const b176 = ((0, modular_js_1.pow2)(b88, _88n, P) * b88) % P;\n    const b220 = ((0, modular_js_1.pow2)(b176, _44n, P) * b44) % P;\n    const b223 = ((0, modular_js_1.pow2)(b220, _3n, P) * b3) % P;\n    const t1 = ((0, modular_js_1.pow2)(b223, _23n, P) * b22) % P;\n    const t2 = ((0, modular_js_1.pow2)(t1, _6n, P) * b2) % P;\n    const root = (0, modular_js_1.pow2)(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = (0, modular_js_1.Field)(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexports.secp256k1 = (0, _shortw_utils_js_1.createCurve)({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = (0, modular_js_1.mod)(k - c1 * a1 - c2 * a2, n);\n            let k2 = (0, modular_js_1.mod)(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256_1.sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = (0, sha256_1.sha256)(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = (0, utils_js_1.concatBytes)(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return (0, sha256_1.sha256)((0, utils_js_1.concatBytes)(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => (0, utils_js_1.numberToBytesBE)(n, 32);\nconst modP = (x) => (0, modular_js_1.mod)(x, secp256k1P);\nconst modN = (x) => (0, modular_js_1.mod)(x, secp256k1N);\nconst Point = exports.secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = exports.secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN((0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = (0, utils_1.randomBytes)(32)) {\n    const m = (0, utils_js_1.ensureBytes)('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = (0, utils_js_1.ensureBytes)('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ (0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN((0, utils_js_1.bytesToNumberBE)(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = (0, utils_js_1.ensureBytes)('signature', signature, 64);\n    const m = (0, utils_js_1.ensureBytes)('message', message);\n    const pub = (0, utils_js_1.ensureBytes)('publicKey', publicKey, 32);\n    try {\n        const P = lift_x((0, utils_js_1.bytesToNumberBE)(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = (0, utils_js_1.bytesToNumberBE)(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = (0, utils_js_1.bytesToNumberBE)(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.schnorr = (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: exports.secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE: utils_js_1.numberToBytesBE,\n        bytesToNumberBE: utils_js_1.bytesToNumberBE,\n        taggedHash,\n        mod: modular_js_1.mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.isogenyMap)(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => (0, weierstrass_js_1.mapToCurveSimpleSWU)(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256_1.sha256,\n}))();\nexports.hashToCurve = (() => htf.hashToCurve)();\nexports.encodeToCurve = (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createCurve = exports.getHash = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\n// connects noble-curves to noble-hashes\nfunction getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => (0, hmac_1.hmac)(hash, key, (0, utils_1.concatBytes)(...msgs)),\n        randomBytes: utils_1.randomBytes,\n    };\n}\nexports.getHash = getHash;\nfunction createCurve(curveDef, defHash) {\n    const create = (hash) => (0, weierstrass_js_1.weierstrass)({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\nexports.createCurve = createCurve;\n//# sourceMappingURL=_shortw_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = exports.HMAC = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\nexports.HMAC = HMAC;\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map"],"sourceRoot":""}