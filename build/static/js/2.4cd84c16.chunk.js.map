{"version":3,"sources":["../node_modules/@noble/hashes/utils.js","../node_modules/@noble/hashes/_assert.js","../node_modules/bs58/index.js","../../src/rpc/JrpcClient.ts","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/base/baseInjectedProvider.ts","../../src/providers/injectedProviders/base/providerHandlers.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../../src/providers/injectedProviders/slope/providerHandlers.ts","../../src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../../src/providers/injectedProviders/solflare/providerHandlers.ts","../../src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../../src/providers/injectedProviders/sollet/providerHandlers.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","../node_modules/@noble/hashes/_sha2.js","../node_modules/@noble/hashes/_u64.js","../../src/Layout.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@noble/ed25519/lib/esm/index.js","../../src/utils.ts","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../../src/structs/coercions.ts","../node_modules/@noble/secp256k1/lib/esm/index.js","../../src/utils/ed25519.ts","../../src/utils/to-buffer.ts","../../src/utils/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction/constants.ts","../../src/transaction/expiry-custom-errors.ts","../../src/message/account-keys.ts","../../src/layout.ts","../../src/utils/shortvec-encoding.ts","../../src/utils/assert.ts","../../src/transaction/legacy.ts","../../src/message/compiled-keys.ts","../../src/message/legacy.ts","../../src/message/v0.ts","../../src/sysvar.ts","../../src/utils/send-and-confirm-transaction.ts","../../src/utils/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/utils/bigint.ts","../../src/nonce-account.ts","../../src/programs/system.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/programs/address-lookup-table/state.ts","../../src/account-data.ts","../../src/utils/makeWebsocketUrl.ts","../../src/connection.ts","../../src/keypair.ts","../../src/programs/address-lookup-table/index.ts","../../src/programs/compute-budget.ts","../../src/programs/ed25519.ts","../../src/utils/secp256k1.ts","../../src/programs/secp256k1.ts","../../src/programs/stake.ts","../../src/programs/vote.ts","../../src/validator-info.ts","../../src/vote-account.ts","../node_modules/@noble/hashes/sha512.js","../node_modules/@noble/hashes/cryptoBrowser.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/base-x/src/index.js","../node_modules/@noble/hashes/sha256.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/@noble/hashes/sha3.js","../node_modules/@noble/hashes/hmac.js"],"names":["Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","require","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","arrays","every","a","reduce","result","pad","set","this","_cloneInto","defaults","opts","undefined","obj","prototype","call","constructor","assign","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","hashCons","msg","bytesLength","crypto","web","getRandomValues","node","number","n","isSafeInteger","bool","b","bytes","lengths","includes","hash","exists","instance","checkFinished","destroyed","finished","output","out","min","assert","default","basex","module","req","res","end","next","chainId","providerConfig","mergeMiddleware","createChainIdMiddleware","createProviderConfigMiddleware","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","createConfigMiddleware","getAccounts","createAsyncMiddleware","request","accounts","response","requestAccounts","targetMethod","handler","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","createRequestAccountsMiddleware","createGetAccountsMiddleware","createGenericJRPCMiddleware","BaseInjectedProvider","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","Promise","engine","solanaMiddleware","createSolanaMiddleware","configMiddleware","injectedProviderProxy","provider","providerFromEngine","getBaseProviderHandlers","injectedProvider","bs58","ethErrors","transaction","sigData","txRes","signature","PhantomInjectedProvider","createInjectedProviderProxyMiddleware","SlopeInjectedProxyProvider","txMessage","publicKey","getProviderEngineProxy","code","method","params","conn","allTxns","unsignedTx","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","getSolletHandlers","getTorusHandlers","transactions","TorusInjectedProvider","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","_objectSpread","privKey","keyPairGenerator","Keypair","Buffer","keyPair","signedMsg","nacl","_providerEngineProxy","sig","txns","tx","SolanaPrivateKeyProvider","getProviderHandlers","createJsonRpcClient","emit","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","ticker","tickerName","displayName","blockExplorer","switchSolanaChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","privateKey","createAccountMiddleware","providerFactory","SolanaWallet","signedTransaction","signedTransactions","SHA2","_assert_js_1","utils_js_1","padOffset","pos","view","len","take","subarray","process","dataView","roundClean","fill","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","get","forEach","digestInto","destroy","to","add","toBig","split","fromBig","U32_MASK64","le","lst","Ah","Al","Bh","Bl","u64","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","Layout","discr","span","offset","_objectWithoutProperties","source","excluded","key","target","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","_0n","_1n","_2n","CU_O","CURVE","freeze","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","x","y","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","p","base","window","push","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","abs","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","acc","num","reduceRight","invertBatch","map","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","c","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","getExtendedPublicKey","point","Signature","assertValidity","fromHex","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","q","m","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","max","adjustBytes25519","checkPrivateKey","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","sha512","getExtendedPublicKeySync","prepareVerification","SB","pub","finishVerification","k","kA","sync","getPublicKey","sign","R","verify","_setWindowSize","nodeCrypto","self","TORSION_SUBGROUP","hashToPrivateScalar","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","configurable","val","toFailures","run","StructError","failure","failures","rest","path","isObject","print","JSON","shiftIterator","input","done","toFailure","context","struct","branch","type","refinement","Symbol","options","coerce","ctx","valid","Struct","props","coercer","entries","schema","validator","refiner","is","validate","tuples","tuple","error","define","name","Element","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","string","Elements","Never","keys","union","Structs","unknown","condition","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","sum","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","counter","values","hmacSha256","seed","hmac","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","e","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","sha256","messages","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tag","tagP","charCodeAt","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","secretKey","toBuffer","serialize","SOLANA_SCHEMA","decode","deserialize","decodeUnchecked","deserializeUnchecked","Map","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","_bn","isPublicKeyData","decoded","eq","toBase58","toJSON","toArrayLike","zeroPad","unique","PublicKey","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","isOnCurve","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","address","err","findProgramAddress","kind","fields","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","timeoutSeconds","TransactionExpiredTimeoutError","staticAccountKeys","accountKeysFromLookups","keySegments","index","keySegment","flat","compileInstructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instructions","instruction","programIdIndex","accountKeyIndexes","meta","property","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","item","field","layout","alloc","decodeLength","size","elem","encodeLength","rem_len","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","drainKeysFoundInLookupTable","lookupTable","keyMeta","writableIndexes","readonlyIndexes","accountKey","writable","readonly","drainedReadonlyKeys","lookupTableIndexes","drainedKeys","keyMetaFilter","lookupTableIndex","lookupTableEntries","entry","compile","getOrInsertDefault","pubkey","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","CompiledKeys","accountKeys","recentBlockhash","indexToProgramIds","args","account","version","compiledInstructions","addressTableLookups","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","filter","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","signData","Message","byteArray","accountCount","dataSlice","numAccountKeysFromLookups","count","lookup","resolveAddressTableLookups","numStaticAccountKeys","tableAccount","addressLookupTableAccounts","tableLookup","encodedStaticAccountKeysLength","serializedInstructions","encodedInstructionsLength","serializedAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializeInstructions","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","serializeAddressTableLookups","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","MessageV0","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","TransactionStatus","DEFAULT_SIGNATURE","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","console","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","invariant","_compile","pair","serializeMessage","getEstimatedFee","connection","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","Transaction","populate","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendOptions","skipPreflight","preflightCommitment","maxRetries","minContextSlot","status","sleep","ms","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","NonceAccount","blob","encodeDecode","bigIntLayout","src","toBigIntLE","toBufferLE","bigInt","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","createAccount","lamports","space","transfer","createAccountWithSeed","createNonceAccount","SystemProgram","fromPubkey","newAccountPubkey","basePubkey","initParams","noncePubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","getMinNumSignatures","Loader","load","balanceNeeded","program","programInfo","accountPubkey","toPubkey","sendAndConfirmTransaction","commitment","dataLayout","chunkSize","bytesLengthPadding","objToString","objKeys","stringify","isArrayProp","propVal","toStr","sort","isFinite","returnVal","trailingZeros","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","slot","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","logs","customMessage","globalThis","isActive","U64_MAX","deactivationSlot","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","accountData","numSerializedAddresses","addresses","lastExtendedSlot","lastExtendedSlotStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","executable","owner","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetParsedBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","client","_commitment","_confirmTransactionInitialTimeout","_rpcEndpoint","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","Set","wsEndpoint","httpHeaders","fetch","disableRetryOnRateLimit","putativeUrl","test","assertEndpointUrl","endpoint","matches","protocol","startPort","portWithColon","websocketPort","hostish","makeWebsocketUrl","customFetch","fetchWithMiddleware","info","init","modifiedInfo","reject","modifiedFetchArgs","clientBrowser","body","agent","headers","too_many_requests_retries","waitTime","url","statusText","text","callback","createRpcClient","requests","batch","createRpcBatchRequest","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","bind","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","_buildArgs","unsafeRes","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","_args","ownerAddress","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getAccountInfo","getMultipleParsedAccounts","publicKeys","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configWithoutEncoding","encoding","getParsedProgramAccounts","confirmTransaction","rawSignature","strategy","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","__type","expiryPromise","timeoutMs","timeoutId","checkBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","clearTimeout","removeSignatureListener","getClusterNodes","getVoteAccounts","getSlot","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatus","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getMinimumBalanceForRentExemption","getRecentBlockhashAndContext","getRecentPerformanceSamples","limit","getFeeCalculatorForBlockhash","getFeeForMessage","wireMessage","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","getParsedBlock","getBlockHeight","getBlockProduction","configOrCommitment","extra","getTransaction","getParsedTransaction","getParsedTransactions","methodName","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","transactionDetails","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","highestConfirmedRoot","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","getSignaturesForAddress","getAddressLookupTable","accountInfo","AddressLookupTableAccount","getNonceAndContext","getNonce","requestAirdrop","_blockhashWithExpiryBlockHeight","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","MS_PER_SLOT","getStakeMinimumDelegation","simulateTransaction","encodedTransaction","includeAccounts","configOrSigners","transactionOrMessage","originalTx","disableCache","logTrace","traceIndent","sendTransaction","signersOrOptions","sendRawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","clearInterval","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbacks","_makeSubscription","clientSubscriptionId","fastStableStringify","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","notification","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","dispose","override","onSignature","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","_keypair","keypair","generate","fromSecretKey","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","createLookupTable","recentSlot","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","AddressLookupTableProgram","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","microLamports","ComputeBudgetProgram","ED25519_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPrivateKey","secp256k1","msgs","ecdsaSign","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","publicKeyToEthAddress","keccak_256","Secp256k1Program","ethAddress","recoveryId","createInstructionWithEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","unixTimestamp","custodian","Lockup","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","initialize","lockup","staker","withdrawer","stakePubkey","delegate","authorize","custodianPubkey","newAuthorized","newAuthorizedPubkey","stakeAuthorizationType","authorizeWithSeed","authoritySeed","authorityOwner","splitInstruction","splitWithSeed","splitStakePubkey","merge","withdraw","deactivate","StakeProgram","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","initializeAccount","voteInit","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","voteAuthorizeWithSeedArgs","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","safeWithdraw","currentVoteAccountBalance","VoteProgram","website","details","keybaseUsername","sha384","sha512_256","SHA512","_sha2_js_1","_u64_js_1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","start","mul","move","dest","isArray","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","w","off","_strip","limbLen","limbPow","imuln","_iaddn","pow","copy","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","lo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","isBuffer","pbegin","pend","b58","it1","it2","repeat","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","__createBinding","enumerable","__setModuleDefault","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","splice","join","buf","concat","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","writeU32","fn","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","apply","RangeError","readUInt8","readUInt16LE","readUInt32LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","idx","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","unshift","pop","decoderError","opt_code_point","DEFAULT_ENCODING","String","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","input_stream","code_points","cp","fromCharCode","codePointsToString","opt_string","stringToCodePoints","reversed","toBigIntBE","toBufferBE","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","WebSocket","onopen","onmessage","event","onerror","onclose","reason","optionsOrCallback","send","close","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","CommonClient","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","parse","listeners","then","_ref2","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","shake256","shake128","keccak_512","keccak_384","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","suffix","enableXOF","posOut","state32","keccak","finish","bufferOut","writeInto","xofInto","gen","genShake","dkLen","HMAC","_key","iHash","oHash","getPrototypeOf"],"mappings":"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","file":"static/js/2.4cd84c16.chunk.js","sourcesContent":["\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { createFetchMiddleware, providerFromEngine } from '@toruslabs/base-controllers';\nimport { mergeMiddleware, createAsyncMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport bs58 from 'bs58';\nimport { ethErrors } from 'eth-rpc-errors';\nimport { PublicKey, Connection, Keypair } from '@solana/web3.js';\nimport nacl from '@toruslabs/tweetnacl-js';\n\nfunction createChainIdMiddleware(chainId) {\n  return function (req, res, next, end) {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return function (req, res, next, end) {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createConfigMiddleware(providerConfig) {\n  var chainId = providerConfig.chainId;\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\nfunction createJsonRpcClient(providerConfig) {\n  var rpcTarget = providerConfig.rpcTarget;\n  var fetchMiddleware = createFetchMiddleware({\n    rpcTarget: rpcTarget\n  });\n  var networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware: networkMiddleware,\n    fetchMiddleware: fetchMiddleware\n  };\n}\n\nfunction createGetAccountsMiddleware(_ref) {\n  var getAccounts = _ref.getAccounts;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(request, response, next) {\n      var method, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== \"getAccounts\")) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", next());\n\n            case 3:\n              if (getAccounts) {\n                _context.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n\n            case 5:\n              _context.next = 7;\n              return getAccounts(request);\n\n            case 7:\n              accounts = _context.sent;\n              response.result = accounts;\n              return _context.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n}\nfunction createRequestAccountsMiddleware(_ref3) {\n  var requestAccounts = _ref3.requestAccounts;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(request, response, next) {\n      var method, accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== \"requestAccounts\")) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", next());\n\n            case 3:\n              if (requestAccounts) {\n                _context2.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n\n            case 5:\n              _context2.next = 7;\n              return requestAccounts(request);\n\n            case 7:\n              accounts = _context2.sent;\n              response.result = accounts;\n              return _context2.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x4, _x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(request, response, next) {\n      var method, result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              method = request.method;\n\n              if (!(method !== targetMethod)) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", next());\n\n            case 3:\n              if (handler) {\n                _context3.next = 5;\n                break;\n              }\n\n              throw new Error(\"WalletMiddleware - \".concat(targetMethod, \" not provided\"));\n\n            case 5:\n              _context3.next = 7;\n              return handler(request);\n\n            case 7:\n              result = _context3.sent;\n              response.result = result;\n              return _context3.abrupt(\"return\", undefined);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x7, _x8, _x9) {\n      return _ref5.apply(this, arguments);\n    };\n  }());\n}\nfunction createSolanaMiddleware(providerHandlers) {\n  var getAccounts = providerHandlers.getAccounts,\n      requestAccounts = providerHandlers.requestAccounts,\n      signTransaction = providerHandlers.signTransaction,\n      signAndSendTransaction = providerHandlers.signAndSendTransaction,\n      signAllTransactions = providerHandlers.signAllTransactions,\n      signMessage = providerHandlers.signMessage,\n      getPrivateKey = providerHandlers.getPrivateKey,\n      getSecretKey = providerHandlers.getSecretKey;\n  return mergeMiddleware([createRequestAccountsMiddleware({\n    requestAccounts: requestAccounts\n  }), createGetAccountsMiddleware({\n    getAccounts: getAccounts\n  }), createGenericJRPCMiddleware(\"signTransaction\", signTransaction), createGenericJRPCMiddleware(\"signAndSendTransaction\", signAndSendTransaction), createGenericJRPCMiddleware(\"signAllTransactions\", signAllTransactions), createGenericJRPCMiddleware(\"signMessage\", signMessage), createGenericJRPCMiddleware(\"solanaPrivateKey\", getPrivateKey), createGenericJRPCMiddleware(\"solanaSecretKey\", getSecretKey)]);\n}\nfunction createChainSwitchMiddleware(_ref6) {\n  var addNewChainConfig = _ref6.addNewChainConfig,\n      switchSolanaChain = _ref6.switchSolanaChain;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"addSolanaChain\", addNewChainConfig), createGenericJRPCMiddleware(\"switchSolanaChain\", switchSolanaChain)]);\n}\nfunction createAccountMiddleware(_ref7) {\n  var updatePrivatekey = _ref7.updatePrivatekey;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"updateAccount\", updatePrivatekey)]);\n}\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper$6(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$6(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$6() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar BaseInjectedProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(BaseInjectedProvider, _BaseProvider);\n\n  var _super = _createSuper$6(BaseInjectedProvider);\n\n  function BaseInjectedProvider(_ref) {\n    var config = _ref.config,\n        state = _ref.state;\n\n    _classCallCheck(this, BaseInjectedProvider);\n\n    return _super.call(this, {\n      config: {\n        chainConfig: _objectSpread$3(_objectSpread$3({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(BaseInjectedProvider, [{\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", Promise.resolve());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function switchChain(_x) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(injectedProvider) {\n        var engine, providerHandlers, solanaMiddleware, configMiddleware, injectedProviderProxy, provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                engine = new JRPCEngine();\n                providerHandlers = this.getProviderHandlers(injectedProvider);\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                engine.push(solanaMiddleware);\n                configMiddleware = createConfigMiddleware(this.config.chainConfig);\n                engine.push(configMiddleware);\n                injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n\n                if (injectedProviderProxy) {\n                  engine.push(injectedProviderProxy);\n                }\n\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context2.next = 12;\n                return this.lookupNetwork();\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setupProvider(_x2) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var chainConfig;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                chainConfig = this.config.chainConfig;\n                this.update({\n                  chainId: chainConfig.chainId\n                });\n                return _context3.abrupt(\"return\", chainConfig.chainId || \"\");\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"getInjectedProviderProxy\",\n    value: function getInjectedProviderProxy(_) {\n      return undefined;\n    }\n  }]);\n\n  return BaseInjectedProvider;\n}(BaseProvider);\n\nvar getBaseProviderHandlers = function getBaseProviderHandlers(injectedProvider) {\n  var providerHandlers = {\n    requestAccounts: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAccounts() {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    getSecretKey: function () {\n      var _getSecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSecretKey() {\n        return _getSecretKey.apply(this, arguments);\n      }\n\n      return getSecretKey;\n    }(),\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req) {\n        var transaction;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return injectedProvider.signTransaction(req.params.message);\n\n              case 2:\n                transaction = _context5.sent;\n                return _context5.abrupt(\"return\", transaction);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function signTransaction(_x) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }(),\n    signMessage: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n        var sigData;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return injectedProvider.signMessage(req.params.message, req.params.display);\n\n              case 2:\n                sigData = _context6.sent;\n                return _context6.abrupt(\"return\", sigData.signature);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function signMessage(_x2) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }(),\n    signAllTransactions: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n        var _req$params, _req$params2;\n\n        var transaction;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length))) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                _context7.next = 4;\n                return injectedProvider.signAllTransactions(req.params.message);\n\n              case 4:\n                transaction = _context7.sent;\n                return _context7.abrupt(\"return\", transaction);\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function signAllTransactions(_x3) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }(),\n    signAndSendTransaction: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n        var txRes;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return injectedProvider.signAndSendTransaction(req.params.message);\n\n              case 2:\n                txRes = _context8.sent;\n                return _context8.abrupt(\"return\", {\n                  signature: txRes.signature\n                });\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function signAndSendTransaction(_x4) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }()\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction createInjectedProviderProxyMiddleware(provider) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, _next) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return provider.request(_objectSpread$2({}, req));\n\n            case 2:\n              result = _context.sent;\n              res.result = result;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\nfunction _createSuper$5(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$5(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$5() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar PhantomInjectedProvider = /*#__PURE__*/function (_BaseInjectedProvider) {\n  _inherits(PhantomInjectedProvider, _BaseInjectedProvider);\n\n  var _super = _createSuper$5(PhantomInjectedProvider);\n\n  function PhantomInjectedProvider() {\n    _classCallCheck(this, PhantomInjectedProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PhantomInjectedProvider, [{\n    key: \"getProviderHandlers\",\n    value: function getProviderHandlers(injectedProvider) {\n      return getBaseProviderHandlers(injectedProvider);\n    }\n  }, {\n    key: \"getInjectedProviderProxy\",\n    value: function getInjectedProviderProxy(injectedProvider) {\n      return createInjectedProviderProxyMiddleware(injectedProvider);\n    }\n  }]);\n\n  return PhantomInjectedProvider;\n}(BaseInjectedProvider);\n\nvar getSlopeHandlers = function getSlopeHandlers(injectedProvider, getProviderEngineProxy) {\n  var providerHandlers = {\n    requestAccounts: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$injectedProvid, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return injectedProvider.connect();\n\n              case 2:\n                _yield$injectedProvid = _context.sent;\n                data = _yield$injectedProvid.data;\n                return _context.abrupt(\"return\", [data.publicKey]);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _yield$injectedProvid2, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return injectedProvider.connect();\n\n              case 2:\n                _yield$injectedProvid2 = _context2.sent;\n                data = _yield$injectedProvid2.data;\n                return _context2.abrupt(\"return\", [data.publicKey]);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAccounts() {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    getSecretKey: function () {\n      var _getSecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSecretKey() {\n        return _getSecretKey.apply(this, arguments);\n      }\n\n      return getSecretKey;\n    }(),\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req) {\n        var txMessage, _yield$injectedProvid3, data, publicKey, signature;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                txMessage = req.params.message;\n\n                if (txMessage) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: \"Invalid transaction message\"\n                });\n\n              case 3:\n                _context5.next = 5;\n                return injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n\n              case 5:\n                _yield$injectedProvid3 = _context5.sent;\n                data = _yield$injectedProvid3.data;\n\n                if (!(!data.publicKey || !data.signature)) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid signature from slope wallet\");\n\n              case 9:\n                publicKey = new PublicKey(data.publicKey);\n                signature = bs58.decode(data.signature);\n                txMessage.addSignature(publicKey, signature);\n                return _context5.abrupt(\"return\", txMessage);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function signTransaction(_x) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }(),\n    signMessage: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return injectedProvider.signMessage(req.params.message);\n\n              case 2:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", bs58.decode(response.data.signature));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function signMessage(_x2) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }(),\n    signAndSendTransaction: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n        var provider, txMessage, _yield$injectedProvid4, data, publicKey, signature, chainConfig, conn, res;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                provider = getProviderEngineProxy();\n\n                if (provider) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 3:\n                txMessage = req.params.message;\n\n                if (txMessage) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: \"Invalid transaction message\"\n                });\n\n              case 6:\n                _context7.next = 8;\n                return injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n\n              case 8:\n                _yield$injectedProvid4 = _context7.sent;\n                data = _yield$injectedProvid4.data;\n\n                if (!(!data.publicKey || !data.signature)) {\n                  _context7.next = 12;\n                  break;\n                }\n\n                throw new Error(\"Invalid signature from slope wallet\");\n\n              case 12:\n                publicKey = new PublicKey(data.publicKey);\n                signature = bs58.decode(data.signature);\n                txMessage.addSignature(publicKey, signature);\n                _context7.next = 17;\n                return provider.request({\n                  method: \"solana_provider_config\",\n                  params: []\n                });\n\n              case 17:\n                chainConfig = _context7.sent;\n                conn = new Connection(chainConfig.rpcTarget);\n                _context7.next = 21;\n                return conn.sendRawTransaction(txMessage.serialize());\n\n              case 21:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  signature: res\n                });\n\n              case 23:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function signAndSendTransaction(_x3) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }(),\n    signAllTransactions: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n        var _req$params, _req$params2, _data$signatures;\n\n        var allTxns, length, unsignedTx, i, _yield$injectedProvid5, msg, data, publicKey, signature;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length))) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                allTxns = req.params.message;\n                length = allTxns.length;\n                unsignedTx = [];\n\n                for (i = 0; i < length; i++) {\n                  unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n                }\n\n                _context8.next = 8;\n                return injectedProvider.signAllTransactions(unsignedTx);\n\n              case 8:\n                _yield$injectedProvid5 = _context8.sent;\n                msg = _yield$injectedProvid5.msg;\n                data = _yield$injectedProvid5.data;\n\n                if (!(!data.publicKey || ((_data$signatures = data.signatures) === null || _data$signatures === void 0 ? void 0 : _data$signatures.length) !== length)) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                throw new Error(msg);\n\n              case 13:\n                publicKey = new PublicKey(data.publicKey);\n\n                for (i = 0; i < length; i++) {\n                  signature = bs58.decode(data.signatures[i]);\n                  allTxns[i].addSignature(publicKey, signature);\n                }\n\n                return _context8.abrupt(\"return\", allTxns);\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function signAllTransactions(_x4) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  };\n  return providerHandlers;\n};\n\nfunction _createSuper$4(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$4() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SlopeInjectedProxyProvider = /*#__PURE__*/function (_BaseInjectedProvider) {\n  _inherits(SlopeInjectedProxyProvider, _BaseInjectedProvider);\n\n  var _super = _createSuper$4(SlopeInjectedProxyProvider);\n\n  function SlopeInjectedProxyProvider() {\n    _classCallCheck(this, SlopeInjectedProxyProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SlopeInjectedProxyProvider, [{\n    key: \"getProviderHandlers\",\n    value: function getProviderHandlers(injectedProvider) {\n      return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n    }\n  }]);\n\n  return SlopeInjectedProxyProvider;\n}(BaseInjectedProvider);\n\nvar getSolflareHandlers = function getSolflareHandlers(injectedProvider, getProviderEngineProxy) {\n  var solflareProviderHandlers = getBaseProviderHandlers(injectedProvider);\n\n  solflareProviderHandlers.signAndSendTransaction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req) {\n      var provider, transaction, chainConfig, conn, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              provider = getProviderEngineProxy();\n\n              if (provider) {\n                _context.next = 3;\n                break;\n              }\n\n              throw ethErrors.provider.custom({\n                message: \"Provider is not initialized\",\n                code: 4902\n              });\n\n            case 3:\n              _context.next = 5;\n              return injectedProvider.signTransaction(req.params.message);\n\n            case 5:\n              transaction = _context.sent;\n              _context.next = 8;\n              return provider.request({\n                method: \"solana_provider_config\",\n                params: []\n              });\n\n            case 8:\n              chainConfig = _context.sent;\n              conn = new Connection(chainConfig.rpcTarget);\n              _context.next = 12;\n              return conn.sendRawTransaction(transaction.serialize());\n\n            case 12:\n              res = _context.sent;\n              return _context.abrupt(\"return\", {\n                signature: res\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return solflareProviderHandlers;\n};\n\nfunction _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$3() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SolflareInjectedProvider = /*#__PURE__*/function (_BaseInjectedProvider) {\n  _inherits(SolflareInjectedProvider, _BaseInjectedProvider);\n\n  var _super = _createSuper$3(SolflareInjectedProvider);\n\n  function SolflareInjectedProvider() {\n    _classCallCheck(this, SolflareInjectedProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SolflareInjectedProvider, [{\n    key: \"getProviderHandlers\",\n    value: function getProviderHandlers(injectedProvider) {\n      return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n    }\n  }]);\n\n  return SolflareInjectedProvider;\n}(BaseInjectedProvider);\n\nvar getSolletHandlers = function getSolletHandlers(injectedProvider, getProviderEngineProxy) {\n  var providerHandlers = getBaseProviderHandlers(injectedProvider);\n\n  providerHandlers.signMessage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req) {\n      var _yield$injectedProvid, signature;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return injectedProvider.sign(req.params.message, \"utf8\");\n\n            case 2:\n              _yield$injectedProvid = _context.sent;\n              signature = _yield$injectedProvid.signature;\n              return _context.abrupt(\"return\", signature);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  providerHandlers.signAndSendTransaction = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req) {\n      var provider, transaction, chainConfig, conn, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              provider = getProviderEngineProxy();\n\n              if (provider) {\n                _context2.next = 3;\n                break;\n              }\n\n              throw ethErrors.provider.custom({\n                message: \"Provider is not initialized\",\n                code: 4902\n              });\n\n            case 3:\n              _context2.next = 5;\n              return injectedProvider.signTransaction(req.params.message);\n\n            case 5:\n              transaction = _context2.sent;\n              _context2.next = 8;\n              return provider.request({\n                method: \"solana_provider_config\",\n                params: []\n              });\n\n            case 8:\n              chainConfig = _context2.sent;\n              conn = new Connection(chainConfig.rpcTarget);\n              _context2.next = 12;\n              return conn.sendRawTransaction(transaction.serialize());\n\n            case 12:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                signature: res\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return providerHandlers;\n};\n\nfunction _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$2() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SolletInjectedProvider = /*#__PURE__*/function (_BaseInjectedProvider) {\n  _inherits(SolletInjectedProvider, _BaseInjectedProvider);\n\n  var _super = _createSuper$2(SolletInjectedProvider);\n\n  function SolletInjectedProvider() {\n    _classCallCheck(this, SolletInjectedProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SolletInjectedProvider, [{\n    key: \"getProviderHandlers\",\n    value: function getProviderHandlers(injectedProvider) {\n      return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n    }\n  }]);\n\n  return SolletInjectedProvider;\n}(BaseInjectedProvider);\n\nvar getTorusHandlers = function getTorusHandlers(injectedProvider) {\n  var providerHandlers = {\n    requestAccounts: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return injectedProvider.request({\n                  method: \"solana_requestAccounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context.sent;\n                return _context.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return injectedProvider.request({\n                  method: \"solana_requestAccounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context2.sent;\n                return _context2.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAccounts() {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    getSecretKey: function () {\n      var _getSecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSecretKey() {\n        return _getSecretKey.apply(this, arguments);\n      }\n\n      return getSecretKey;\n    }(),\n    signMessage: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req) {\n        var _req$params;\n\n        var message;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if ((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                _context5.next = 4;\n                return injectedProvider.signMessage(req.params.message);\n\n              case 4:\n                message = _context5.sent;\n                return _context5.abrupt(\"return\", message);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function signMessage(_x) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }(),\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n        var _req$params2;\n\n        var txMessage, response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if ((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                txMessage = req.params.message;\n                _context6.next = 5;\n                return injectedProvider.signTransaction(txMessage);\n\n              case 5:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function signTransaction(_x2) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }(),\n    signAndSendTransaction: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n        var _req$params3;\n\n        var txMessage, response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if ((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                txMessage = req.params.message;\n                _context7.next = 5;\n                return injectedProvider.sendTransaction(txMessage);\n\n              case 5:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  signature: response\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function signAndSendTransaction(_x3) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }(),\n    signAllTransactions: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n        var _req$params4, _req$params5;\n\n        var transactions, response;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length))) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"message\");\n\n              case 2:\n                transactions = req.params.message;\n                _context8.next = 5;\n                return injectedProvider.signAllTransactions(transactions);\n\n              case 5:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function signAllTransactions(_x4) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar TorusInjectedProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(TorusInjectedProvider, _BaseProvider);\n\n  var _super = _createSuper$1(TorusInjectedProvider);\n\n  function TorusInjectedProvider(_ref) {\n    var config = _ref.config,\n        state = _ref.state;\n\n    _classCallCheck(this, TorusInjectedProvider);\n\n    return _super.call(this, {\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(TorusInjectedProvider, [{\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", Promise.resolve());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function switchChain(_x) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(injectedProvider) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.handleInjectedProviderUpdate(injectedProvider);\n                _context2.next = 3;\n                return this.setupEngine(injectedProvider);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setupProvider(_x2) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var chainId, connectedChainId, connectedHexChainId;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.provider) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Torus solana provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainId = this.config.chainConfig.chainId;\n                _context3.next = 5;\n                return this.provider.request({\n                  method: \"solana_chainId\"\n                });\n\n              case 5:\n                connectedChainId = _context3.sent;\n                connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : \"0x\".concat(parseInt(connectedChainId, 10).toString(16));\n\n                if (!(chainId !== connectedHexChainId)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n\n              case 9:\n                this.update({\n                  chainId: connectedHexChainId\n                });\n                this.provider.emit(\"connect\", {\n                  chainId: this.state.chainId\n                });\n                this.provider.emit(\"chainChanged\", this.state.chainId);\n                return _context3.abrupt(\"return\", this.state.chainId);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"setupEngine\",\n    value: function () {\n      var _setupEngine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(injectedProvider) {\n        var providerHandlers, solanaMiddleware, injectedProviderProxy, engine, provider;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                providerHandlers = getTorusHandlers(injectedProvider);\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n                engine = new JRPCEngine();\n                engine.push(solanaMiddleware);\n                engine.push(injectedProviderProxy);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context4.next = 10;\n                return this.lookupNetwork();\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setupEngine(_x3) {\n        return _setupEngine.apply(this, arguments);\n      }\n\n      return setupEngine;\n    }()\n  }, {\n    key: \"handleInjectedProviderUpdate\",\n    value: function () {\n      var _handleInjectedProviderUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(injectedProvider) {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                injectedProvider.on(\"accountsChanged\", /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(accounts) {\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _this.provider.emit(\"accountsChanged\", accounts);\n\n                          case 1:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x5) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                injectedProvider.on(\"chainChanged\", /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(chainId) {\n                    var connectedHexChainId;\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            connectedHexChainId = isHexStrict(chainId) ? chainId : \"0x\".concat(parseInt(chainId, 10).toString(16)); // Check if chainId changed and trigger event\n\n                            _this.configure({\n                              chainConfig: _objectSpread$1(_objectSpread$1({}, _this.config.chainConfig), {}, {\n                                chainId: connectedHexChainId\n                              })\n                            });\n\n                            _context6.next = 4;\n                            return _this.setupProvider(injectedProvider);\n\n                          case 4:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function (_x6) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function handleInjectedProviderUpdate(_x4) {\n        return _handleInjectedProviderUpdate.apply(this, arguments);\n      }\n\n      return handleInjectedProviderUpdate;\n    }()\n  }]);\n\n  return TorusInjectedProvider;\n}(BaseProvider);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction getProviderHandlers(_x) {\n  return _getProviderHandlers.apply(this, arguments);\n}\n\nfunction _getProviderHandlers() {\n  _getProviderHandlers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(_ref) {\n    var privKey, getProviderEngineProxy, keyPairGenerator, keyPair, providerHandlers;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            privKey = _ref.privKey, getProviderEngineProxy = _ref.getProviderEngineProxy;\n\n            keyPairGenerator = function keyPairGenerator() {\n              return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n            };\n\n            if (!(typeof privKey !== \"string\")) {\n              _context9.next = 4;\n              break;\n            }\n\n            throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n\n          case 4:\n            keyPair = keyPairGenerator();\n            providerHandlers = {\n              requestAccounts: function () {\n                var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          return _context.abrupt(\"return\", [keyPair.publicKey.toBase58()]);\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                function requestAccounts() {\n                  return _requestAccounts.apply(this, arguments);\n                }\n\n                return requestAccounts;\n              }(),\n              getAccounts: function () {\n                var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          return _context2.abrupt(\"return\", [keyPair.publicKey.toBase58()]);\n\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                function getAccounts() {\n                  return _getAccounts.apply(this, arguments);\n                }\n\n                return getAccounts;\n              }(),\n              getPrivateKey: function () {\n                var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          return _context3.abrupt(\"return\", privKey);\n\n                        case 1:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                function getPrivateKey() {\n                  return _getPrivateKey.apply(this, arguments);\n                }\n\n                return getPrivateKey;\n              }(),\n              getSecretKey: function () {\n                var _getSecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          return _context4.abrupt(\"return\", bs58.encode(keyPair.secretKey));\n\n                        case 1:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                function getSecretKey() {\n                  return _getSecretKey.apply(this, arguments);\n                }\n\n                return getSecretKey;\n              }(),\n              signTransaction: function () {\n                var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req) {\n                  var _req$params;\n\n                  var transaction;\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if ((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) {\n                            _context5.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          transaction = req.params.message;\n                          transaction.partialSign(keyPair);\n                          return _context5.abrupt(\"return\", transaction);\n\n                        case 5:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                function signTransaction(_x2) {\n                  return _signTransaction.apply(this, arguments);\n                }\n\n                return signTransaction;\n              }(),\n              signMessage: function () {\n                var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n                  var _req$params2;\n\n                  var signedMsg;\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          if ((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message) {\n                            _context6.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n                          return _context6.abrupt(\"return\", signedMsg);\n\n                        case 4:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                function signMessage(_x3) {\n                  return _signMessage.apply(this, arguments);\n                }\n\n                return signMessage;\n              }(),\n              signAndSendTransaction: function () {\n                var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n                  var _req$params3;\n\n                  var _providerEngineProxy, transaction, sig;\n\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if ((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message) {\n                            _context7.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          _providerEngineProxy = getProviderEngineProxy();\n\n                          if (_providerEngineProxy) {\n                            _context7.next = 5;\n                            break;\n                          }\n\n                          throw ethErrors.provider.custom({\n                            message: \"Provider is not initialized\",\n                            code: 4902\n                          });\n\n                        case 5:\n                          transaction = req.params.message;\n                          transaction.sign(keyPair);\n                          _context7.next = 9;\n                          return _providerEngineProxy.request({\n                            method: \"sendTransaction\",\n                            params: [bs58.encode(transaction.serialize())]\n                          });\n\n                        case 9:\n                          sig = _context7.sent;\n                          return _context7.abrupt(\"return\", {\n                            signature: sig\n                          });\n\n                        case 11:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                function signAndSendTransaction(_x4) {\n                  return _signAndSendTransaction.apply(this, arguments);\n                }\n\n                return signAndSendTransaction;\n              }(),\n              signAllTransactions: function () {\n                var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n                  var _req$params4, _req$params5, _req$params6;\n\n                  var txns, _iterator, _step, tx, transaction;\n\n                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          if (!(!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length))) {\n                            _context8.next = 2;\n                            break;\n                          }\n\n                          throw ethErrors.rpc.invalidParams(\"message\");\n\n                        case 2:\n                          txns = (_req$params6 = req.params) === null || _req$params6 === void 0 ? void 0 : _req$params6.message;\n                          _iterator = _createForOfIteratorHelper(txns || []);\n\n                          try {\n                            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                              tx = _step.value;\n                              transaction = tx;\n                              transaction.partialSign(keyPair);\n                            }\n                          } catch (err) {\n                            _iterator.e(err);\n                          } finally {\n                            _iterator.f();\n                          }\n\n                          return _context8.abrupt(\"return\", txns);\n\n                        case 6:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                function signAllTransactions(_x5) {\n                  return _signAllTransactions.apply(this, arguments);\n                }\n\n                return signAllTransactions;\n              }()\n            };\n            return _context9.abrupt(\"return\", providerHandlers);\n\n          case 7:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getProviderHandlers.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SolanaPrivateKeyProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(SolanaPrivateKeyProvider, _BaseProvider);\n\n  var _super = _createSuper(SolanaPrivateKeyProvider);\n\n  function SolanaPrivateKeyProvider(_ref) {\n    var config = _ref.config,\n        state = _ref.state;\n\n    _classCallCheck(this, SolanaPrivateKeyProvider);\n\n    return _super.call(this, {\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(SolanaPrivateKeyProvider, [{\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.state.privateKey) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Private key is not found in state, plz pass it in constructor state param\",\n                  code: 4902\n                });\n\n              case 2:\n                _context.next = 4;\n                return this.setupProvider(this.state.privateKey);\n\n              case 4:\n                return _context.abrupt(\"return\", this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(privKey) {\n        var providerHandlers, solanaMiddleware, engine, _createJsonRpcClient, networkMiddleware, provider;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getProviderHandlers({\n                  privKey: privKey,\n                  getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n                });\n\n              case 2:\n                providerHandlers = _context2.sent;\n                solanaMiddleware = createSolanaMiddleware(providerHandlers);\n                engine = new JRPCEngine();\n                _createJsonRpcClient = createJsonRpcClient(this.config.chainConfig), networkMiddleware = _createJsonRpcClient.networkMiddleware;\n                engine.push(this.getChainSwitchMiddleware());\n                engine.push(this.getAccountMiddleware());\n                engine.push(solanaMiddleware);\n                engine.push(networkMiddleware);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context2.next = 14;\n                return this.lookupNetwork();\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setupProvider(_x) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"updateAccount\",\n    value: function () {\n      var _updateAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n        var existingKey;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                _context3.next = 4;\n                return this._providerEngineProxy.request({\n                  method: \"solanaPrivateKey\"\n                });\n\n              case 4:\n                existingKey = _context3.sent;\n\n                if (!(existingKey !== params.privateKey)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _context3.next = 8;\n                return this.setupProvider(params.privateKey);\n\n              case 8:\n                _context3.t0 = this._providerEngineProxy;\n                _context3.next = 11;\n                return this._providerEngineProxy.request({\n                  method: \"requestAccounts\"\n                });\n\n              case 11:\n                _context3.t1 = _context3.sent;\n                _context3.t2 = {\n                  accounts: _context3.t1\n                };\n\n                _context3.t0.emit.call(_context3.t0, \"accountsChanged\", _context3.t2);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateAccount(_x2) {\n        return _updateAccount.apply(this, arguments);\n      }\n\n      return updateAccount;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params) {\n        var chainConfig, privKey;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainConfig = this.getChainConfig(params.chainId);\n                this.update({\n                  chainId: \"loading\"\n                });\n                this.configure({\n                  chainConfig: chainConfig\n                });\n                _context4.next = 7;\n                return this._providerEngineProxy.request({\n                  method: \"solanaPrivateKey\"\n                });\n\n              case 7:\n                privKey = _context4.sent;\n                _context4.next = 10;\n                return this.setupProvider(privKey);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function switchChain(_x3) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var health, chainConfig;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                _context5.next = 4;\n                return this._providerEngineProxy.request({\n                  method: \"getHealth\",\n                  params: []\n                });\n\n              case 4:\n                health = _context5.sent;\n                chainConfig = this.config.chainConfig;\n\n                if (!(health !== \"ok\")) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                throw WalletInitializationError.rpcConnectionError(\"Failed to lookup network for following rpc target: \".concat(chainConfig.rpcTarget));\n\n              case 8:\n                this.update({\n                  chainId: chainConfig.chainId\n                });\n\n                if (this.state.chainId !== chainConfig.chainId) {\n                  this.provider.emit(\"chainChanged\", this.state.chainId);\n                  this.provider.emit(\"connect\", {\n                    chainId: this.state.chainId\n                  });\n                }\n\n                return _context5.abrupt(\"return\", this.state.chainId);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"getChainSwitchMiddleware\",\n    value: function getChainSwitchMiddleware() {\n      var _this = this;\n\n      var chainSwitchHandlers = {\n        addNewChainConfig: function () {\n          var _addNewChainConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req) {\n            var _req$params, chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency;\n\n            return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    if (req.params) {\n                      _context6.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    _req$params = req.params, chainId = _req$params.chainId, chainName = _req$params.chainName, rpcUrls = _req$params.rpcUrls, blockExplorerUrls = _req$params.blockExplorerUrls, nativeCurrency = _req$params.nativeCurrency;\n\n                    if (chainId) {\n                      _context6.next = 5;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n\n                  case 5:\n                    if (!(!rpcUrls || rpcUrls.length === 0)) {\n                      _context6.next = 7;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n\n                  case 7:\n                    if (nativeCurrency) {\n                      _context6.next = 9;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n                  case 9:\n                    _this.addChain({\n                      chainNamespace: CHAIN_NAMESPACES.SOLANA,\n                      chainId: chainId,\n                      ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"SOL\",\n                      tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Solana\",\n                      displayName: chainName,\n                      rpcTarget: rpcUrls[0],\n                      blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n                    });\n\n                  case 10:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6);\n          }));\n\n          function addNewChainConfig(_x4) {\n            return _addNewChainConfig.apply(this, arguments);\n          }\n\n          return addNewChainConfig;\n        }(),\n        switchSolanaChain: function () {\n          var _switchSolanaChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req) {\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    if (req.params) {\n                      _context7.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    if (req.params.chainId) {\n                      _context7.next = 4;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n\n                  case 4:\n                    _context7.next = 6;\n                    return _this.switchChain(req.params);\n\n                  case 6:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7);\n          }));\n\n          function switchSolanaChain(_x5) {\n            return _switchSolanaChain.apply(this, arguments);\n          }\n\n          return switchSolanaChain;\n        }()\n      };\n      var chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n      return chainSwitchMiddleware;\n    }\n  }, {\n    key: \"getAccountMiddleware\",\n    value: function getAccountMiddleware() {\n      var _this2 = this;\n\n      var accountHandlers = {\n        updatePrivatekey: function () {\n          var _updatePrivatekey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req) {\n            var privateKey;\n            return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    if (req.params) {\n                      _context8.next = 2;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing request params\");\n\n                  case 2:\n                    if (req.params.privateKey) {\n                      _context8.next = 4;\n                      break;\n                    }\n\n                    throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n\n                  case 4:\n                    privateKey = req.params.privateKey;\n                    _context8.next = 7;\n                    return _this2.updateAccount({\n                      privateKey: privateKey\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _callee8);\n          }));\n\n          function updatePrivatekey(_x6) {\n            return _updatePrivatekey.apply(this, arguments);\n          }\n\n          return updatePrivatekey;\n        }()\n      };\n      return createAccountMiddleware(accountHandlers);\n    }\n  }]);\n\n  return SolanaPrivateKeyProvider;\n}(BaseProvider);\n\n_defineProperty(SolanaPrivateKeyProvider, \"getProviderInstance\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(params) {\n    var providerFactory;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            providerFactory = new SolanaPrivateKeyProvider({\n              config: {\n                chainConfig: params.chainConfig\n              }\n            });\n            _context9.next = 3;\n            return providerFactory.setupProvider(params.privKey);\n\n          case 3:\n            return _context9.abrupt(\"return\", providerFactory);\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x7) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\nvar SolanaWallet = /*#__PURE__*/function () {\n  function SolanaWallet(provider) {\n    _classCallCheck(this, SolanaWallet);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = provider;\n  }\n\n  _createClass(SolanaWallet, [{\n    key: \"requestAccounts\",\n    value: function () {\n      var _requestAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.provider.request({\n                  method: \"requestAccounts\",\n                  params: {}\n                });\n\n              case 2:\n                accounts = _context.sent;\n                return _context.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function requestAccounts() {\n        return _requestAccounts.apply(this, arguments);\n      }\n\n      return requestAccounts;\n    }()\n  }, {\n    key: \"signAndSendTransaction\",\n    value: function () {\n      var _signAndSendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transaction) {\n        var _yield$this$provider$, signature;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.provider.request({\n                  method: \"signAndSendTransaction\",\n                  params: {\n                    message: transaction\n                  }\n                });\n\n              case 2:\n                _yield$this$provider$ = _context2.sent;\n                signature = _yield$this$provider$.signature;\n                return _context2.abrupt(\"return\", {\n                  signature: signature\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function signAndSendTransaction(_x) {\n        return _signAndSendTransaction.apply(this, arguments);\n      }\n\n      return signAndSendTransaction;\n    }()\n  }, {\n    key: \"signTransaction\",\n    value: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transaction) {\n        var signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.provider.request({\n                  method: \"signTransaction\",\n                  params: {\n                    message: transaction\n                  }\n                });\n\n              case 2:\n                signedTransaction = _context3.sent;\n                return _context3.abrupt(\"return\", signedTransaction);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function signTransaction(_x2) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }()\n  }, {\n    key: \"signAllTransactions\",\n    value: function () {\n      var _signAllTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transactions) {\n        var signedTransactions;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.provider.request({\n                  method: \"signAllTransactions\",\n                  params: {\n                    message: transactions\n                  }\n                });\n\n              case 2:\n                signedTransactions = _context4.sent;\n                return _context4.abrupt(\"return\", signedTransactions);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function signAllTransactions(_x3) {\n        return _signAllTransactions.apply(this, arguments);\n      }\n\n      return signAllTransactions;\n    }()\n  }, {\n    key: \"signMessage\",\n    value: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.provider.request({\n                  method: \"signMessage\",\n                  params: {\n                    message: data\n                  }\n                });\n\n              case 2:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function signMessage(_x4) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(args) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.provider.request(args);\n\n              case 2:\n                result = _context6.sent;\n                return _context6.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function request(_x5) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }]);\n\n  return SolanaWallet;\n}();\n\nexport { PhantomInjectedProvider, SlopeInjectedProxyProvider, SolanaPrivateKeyProvider, SolanaWallet, SolflareInjectedProvider, SolletInjectedProvider, TorusInjectedProvider };\n//# sourceMappingURL=solanaProvider.esm.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using acounter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetParsedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    return res.result;\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n"],"sourceRoot":""}