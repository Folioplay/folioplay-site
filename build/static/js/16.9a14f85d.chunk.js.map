{"version":3,"sources":["../../src/baseEvmAdapter.ts","../../src/metamaskAdapter.ts"],"names":["BaseEvmAdapter","params","clientId","provider","chainConfig","chainId","WalletLoginError","notConnectedError","chainNamespace","status","ADAPTER_STATUS","CONNECTED","request","method","accounts","length","existingToken","getSavedToken","name","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","signChallenge","challenge","signedMessage","verifySignedChallenge","sessionTime","saveToken","disconnectionError","clearToken","BaseAdapter","MetamaskAdapter","adapterOptions","ADAPTER_NAMESPACES","EIP155","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","WALLET_ADAPTERS","METAMASK","NOT_READY","metamaskProvider","_","Error","options","detectEthereumProvider","mustBeMetaMask","WalletInitializationError","notInstalled","READY","emit","ADAPTER_EVENTS","log","debug","autoConnect","rehydrated","connect","ERRORED","getChainConfig","CONNECTING","adapter","switchChain","once","disconnect","reconnected","connectionError","cleanup","removeAllListeners","DISCONNECTED","code","chainName","displayName","rpcUrls","rpcTarget"],"mappings":"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","file":"static/js/16.9a14f85d.chunk.js","sourcesContent":["import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { WalletLoginError, saveToken, verifySignedChallenge, signChallenge, getSavedToken, checkIfTokenIsExpired, ADAPTER_STATUS, clearToken, BaseAdapter } from '@web3auth/base';\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar BaseEvmAdapter = /*#__PURE__*/function (_BaseAdapter) {\n  _inherits(BaseEvmAdapter, _BaseAdapter);\n\n  var _super = _createSuper(BaseEvmAdapter);\n\n  function BaseEvmAdapter() {\n    var _this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BaseEvmAdapter);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"clientId\", void 0);\n\n    _this.clientId = params.clientId;\n    return _this;\n  }\n\n  _createClass(BaseEvmAdapter, [{\n    key: \"authenticateUser\",\n    value: function () {\n      var _authenticateUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$chainConfig;\n\n        var _this$chainConfig2, chainNamespace, chainId, accounts, existingToken, isExpired, payload, challenge, signedMessage, idToken;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!this.provider || !((_this$chainConfig = this.chainConfig) !== null && _this$chainConfig !== void 0 && _this$chainConfig.chainId))) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError();\n\n              case 2:\n                _this$chainConfig2 = this.chainConfig, chainNamespace = _this$chainConfig2.chainNamespace, chainId = _this$chainConfig2.chainId;\n\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n\n              case 5:\n                _context.next = 7;\n                return this.provider.request({\n                  method: \"eth_accounts\"\n                });\n\n              case 7:\n                accounts = _context.sent;\n\n                if (!(accounts && accounts.length > 0)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                existingToken = getSavedToken(accounts[0], this.name);\n\n                if (!existingToken) {\n                  _context.next = 14;\n                  break;\n                }\n\n                isExpired = checkIfTokenIsExpired(existingToken);\n\n                if (isExpired) {\n                  _context.next = 14;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  idToken: existingToken\n                });\n\n              case 14:\n                payload = {\n                  domain: window.location.origin,\n                  uri: window.location.href,\n                  address: accounts[0],\n                  chainId: parseInt(chainId, 16),\n                  version: \"1\",\n                  nonce: Math.random().toString(36).slice(2),\n                  issuedAt: new Date().toISOString()\n                };\n                _context.next = 17;\n                return signChallenge(payload, chainNamespace);\n\n              case 17:\n                challenge = _context.sent;\n                _context.next = 20;\n                return this.provider.request({\n                  method: \"personal_sign\",\n                  params: [challenge, accounts[0]]\n                });\n\n              case 20:\n                signedMessage = _context.sent;\n                _context.next = 23;\n                return verifySignedChallenge(chainNamespace, signedMessage, challenge, this.name, this.sessionTime, this.clientId);\n\n              case 23:\n                idToken = _context.sent;\n                saveToken(accounts[0], this.name, idToken);\n                return _context.abrupt(\"return\", {\n                  idToken: idToken\n                });\n\n              case 26:\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function authenticateUser() {\n        return _authenticateUser.apply(this, arguments);\n      }\n\n      return authenticateUser;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n\n              case 2:\n                _context2.next = 4;\n                return this.provider.request({\n                  method: \"eth_accounts\"\n                });\n\n              case 4:\n                accounts = _context2.sent;\n\n                if (accounts && accounts.length > 0) {\n                  clearToken(accounts[0], this.name);\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }]);\n\n  return BaseEvmAdapter;\n}(BaseAdapter);\n\nexport { BaseEvmAdapter };\n//# sourceMappingURL=baseEvmAdapter.esm.js.map\n","import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _get from '@babel/runtime/helpers/get';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, WALLET_ADAPTERS, ADAPTER_STATUS, ADAPTER_EVENTS, log, WalletInitializationError, WalletLoginError, getChainConfig } from '@web3auth/base';\nimport { BaseEvmAdapter } from '@web3auth/base-evm-adapter';\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MetamaskAdapter = /*#__PURE__*/function (_BaseEvmAdapter) {\n  _inherits(MetamaskAdapter, _BaseEvmAdapter);\n\n  var _super = _createSuper(MetamaskAdapter);\n\n  function MetamaskAdapter(adapterOptions) {\n    var _this;\n\n    _classCallCheck(this, MetamaskAdapter);\n\n    _this = _super.call(this, adapterOptions);\n\n    _defineProperty(_assertThisInitialized(_this), \"adapterNamespace\", ADAPTER_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", WALLET_ADAPTERS.METAMASK);\n\n    _defineProperty(_assertThisInitialized(_this), \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(_assertThisInitialized(_this), \"rehydrated\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"metamaskProvider\", null);\n\n    _this.chainConfig = (adapterOptions === null || adapterOptions === void 0 ? void 0 : adapterOptions.chainConfig) || null;\n    _this.sessionTime = (adapterOptions === null || adapterOptions === void 0 ? void 0 : adapterOptions.sessionTime) || 86400;\n    return _this;\n  }\n\n  _createClass(MetamaskAdapter, [{\n    key: \"provider\",\n    get: function get() {\n      if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n        return this.metamaskProvider;\n      }\n\n      return null;\n    },\n    set: function set(_) {\n      throw new Error(\"Not implemented\");\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _get(_getPrototypeOf(MetamaskAdapter.prototype), \"checkInitializationRequirements\", this).call(this);\n\n                _context.next = 3;\n                return detectEthereumProvider({\n                  mustBeMetaMask: true\n                });\n\n              case 3:\n                this.metamaskProvider = _context.sent;\n\n                if (this.metamaskProvider) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n\n              case 6:\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n                _context.prev = 8;\n                log.debug(\"initializing metamask adapter\");\n\n                if (!options.autoConnect) {\n                  _context.next = 14;\n                  break;\n                }\n\n                this.rehydrated = true;\n                _context.next = 14;\n                return this.connect();\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](8);\n                this.emit(ADAPTER_EVENTS.ERRORED, _context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 16]]);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"setAdapterSettings\",\n    value: function setAdapterSettings(options) {\n      if (this.status === ADAPTER_STATUS.READY) return;\n\n      if (options !== null && options !== void 0 && options.sessionTime) {\n        this.sessionTime = options.sessionTime;\n      }\n\n      if (options !== null && options !== void 0 && options.clientId) {\n        this.clientId = options.clientId;\n      }\n    }\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var chainId;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _get(_getPrototypeOf(MetamaskAdapter.prototype), \"checkConnectionRequirements\", this).call(this); // set default to mainnet\n\n\n                if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n                this.status = ADAPTER_STATUS.CONNECTING;\n                this.emit(ADAPTER_EVENTS.CONNECTING, {\n                  adapter: WALLET_ADAPTERS.METAMASK\n                });\n\n                if (this.metamaskProvider) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n\n              case 6:\n                _context2.prev = 6;\n                _context2.next = 9;\n                return this.metamaskProvider.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 9:\n                chainId = this.metamaskProvider.chainId;\n\n                if (!(chainId !== this.chainConfig.chainId)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.next = 13;\n                return this.switchChain(this.chainConfig);\n\n              case 13:\n                this.status = ADAPTER_STATUS.CONNECTED;\n\n                if (this.provider) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n\n              case 16:\n                this.provider.once(\"disconnect\", function () {\n                  // ready to be connected again\n                  _this2.disconnect();\n                });\n                this.emit(ADAPTER_EVENTS.CONNECTED, {\n                  adapter: WALLET_ADAPTERS.METAMASK,\n                  reconnected: this.rehydrated\n                });\n                return _context2.abrupt(\"return\", this.provider);\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t0 = _context2[\"catch\"](6);\n                // ready again to be connected\n                this.status = ADAPTER_STATUS.READY;\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.ERRORED, _context2.t0);\n                throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 21]]);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this$provider;\n\n        var options,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {\n                  cleanup: false\n                };\n                _context3.next = 3;\n                return _get(_getPrototypeOf(MetamaskAdapter.prototype), \"disconnect\", this).call(this);\n\n              case 3:\n                (_this$provider = this.provider) === null || _this$provider === void 0 ? void 0 : _this$provider.removeAllListeners();\n\n                if (options.cleanup) {\n                  this.status = ADAPTER_STATUS.NOT_READY;\n                  this.metamaskProvider = null;\n                } else {\n                  // ready to be connected again\n                  this.status = ADAPTER_STATUS.READY;\n                }\n\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.DISCONNECTED);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n\n              case 2:\n                return _context4.abrupt(\"return\", {});\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(chainConfig) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.metamaskProvider) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 2:\n                _context5.prev = 2;\n                _context5.next = 5;\n                return this.metamaskProvider.request({\n                  method: \"wallet_switchEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId\n                  }]\n                });\n\n              case 5:\n                _context5.next = 15;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](2);\n\n                if (!(_context5.t0.code === 4902)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.next = 12;\n                return this.metamaskProvider.request({\n                  method: \"wallet_addEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId,\n                    chainName: chainConfig.displayName,\n                    rpcUrls: [chainConfig.rpcTarget]\n                  }]\n                });\n\n              case 12:\n                _context5.next = 15;\n                break;\n\n              case 14:\n                throw _context5.t0;\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 7]]);\n      }));\n\n      function switchChain(_x2) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }]);\n\n  return MetamaskAdapter;\n}(BaseEvmAdapter);\n\nexport { MetamaskAdapter };\n//# sourceMappingURL=metamaskAdapter.esm.js.map\n"],"sourceRoot":""}